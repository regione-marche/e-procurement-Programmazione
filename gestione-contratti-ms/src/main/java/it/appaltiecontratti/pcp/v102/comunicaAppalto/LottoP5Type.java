/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.DatiBaseLottoType;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.FattispecieTracciabilitaEnum;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.SceltaContraenteEnum;
/**
 * Oggetto che riporta i dati del lotto.
 */
@Schema(description = "Oggetto che riporta i dati del lotto.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:13:15.678079400+02:00[Europe/Berlin]")

public class LottoP5Type {
  @JsonProperty("lotIdentifier")
  private String lotIdentifier = null;

  @JsonProperty("fattispecieTracciabilita")
  private FattispecieTracciabilitaEnum fattispecieTracciabilita = null;

  @JsonProperty("datiBase")
  private DatiBaseLottoType datiBase = null;

  @JsonProperty("sceltaContraente")
  private SceltaContraenteEnum sceltaContraente = null;

  @JsonProperty("cup")
  private String cup = null;

  public LottoP5Type lotIdentifier(String lotIdentifier) {
    this.lotIdentifier = lotIdentifier;
    return this;
  }

   /**
   * Id univoco del lotto generato dalla stazione appaltante
   * @return lotIdentifier
  **/
  @Schema(required = true, description = "Id univoco del lotto generato dalla stazione appaltante")
  public String getLotIdentifier() {
    return lotIdentifier;
  }

  public void setLotIdentifier(String lotIdentifier) {
    this.lotIdentifier = lotIdentifier;
  }

  public LottoP5Type fattispecieTracciabilita(FattispecieTracciabilitaEnum fattispecieTracciabilita) {
    this.fattispecieTracciabilita = fattispecieTracciabilita;
    return this;
  }

   /**
   * Get fattispecieTracciabilita
   * @return fattispecieTracciabilita
  **/
  @Schema(required = true, description = "")
  public FattispecieTracciabilitaEnum getFattispecieTracciabilita() {
    return fattispecieTracciabilita;
  }

  public void setFattispecieTracciabilita(FattispecieTracciabilitaEnum fattispecieTracciabilita) {
    this.fattispecieTracciabilita = fattispecieTracciabilita;
  }

  public LottoP5Type datiBase(DatiBaseLottoType datiBase) {
    this.datiBase = datiBase;
    return this;
  }

   /**
   * Get datiBase
   * @return datiBase
  **/
  @Schema(required = true, description = "")
  public DatiBaseLottoType getDatiBase() {
    return datiBase;
  }

  public void setDatiBase(DatiBaseLottoType datiBase) {
    this.datiBase = datiBase;
  }

  public LottoP5Type sceltaContraente(SceltaContraenteEnum sceltaContraente) {
    this.sceltaContraente = sceltaContraente;
    return this;
  }

   /**
   * Get sceltaContraente
   * @return sceltaContraente
  **/
  @Schema(required = true, description = "")
  public SceltaContraenteEnum getSceltaContraente() {
    return sceltaContraente;
  }

  public void setSceltaContraente(SceltaContraenteEnum sceltaContraente) {
    this.sceltaContraente = sceltaContraente;
  }

  public LottoP5Type cup(String cup) {
    this.cup = cup;
    return this;
  }

   /**
   * Cup
   * @return cup
  **/
  @Schema(description = "Cup")
  public String getCup() {
    return cup;
  }

  public void setCup(String cup) {
    this.cup = cup;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LottoP5Type lottoP5Type = (LottoP5Type) o;
    return Objects.equals(this.lotIdentifier, lottoP5Type.lotIdentifier) &&
        Objects.equals(this.fattispecieTracciabilita, lottoP5Type.fattispecieTracciabilita) &&
        Objects.equals(this.datiBase, lottoP5Type.datiBase) &&
        Objects.equals(this.sceltaContraente, lottoP5Type.sceltaContraente) &&
        Objects.equals(this.cup, lottoP5Type.cup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lotIdentifier, fattispecieTracciabilita, datiBase, sceltaContraente, cup);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LottoP5Type {\n");
    
    sb.append("    lotIdentifier: ").append(toIndentedString(lotIdentifier)).append("\n");
    sb.append("    fattispecieTracciabilita: ").append(toIndentedString(fattispecieTracciabilita)).append("\n");
    sb.append("    datiBase: ").append(toIndentedString(datiBase)).append("\n");
    sb.append("    sceltaContraente: ").append(toIndentedString(sceltaContraente)).append("\n");
    sb.append("    cup: ").append(toIndentedString(cup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
