/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.MotivoUrgenzaEnum;
/**
 * Oggetto che riporta i dati inerenti la procedura negoziata senza bando pari o sopra soglia
 */
@Schema(description = "Oggetto che riporta i dati inerenti la procedura negoziata senza bando pari o sopra soglia")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class AppaltoA7Type {
  @JsonProperty("motivoUrgenza")
  private MotivoUrgenzaEnum motivoUrgenza = null;

  @JsonProperty("linkDocumenti")
  private String linkDocumenti = null;

  @JsonProperty("relazioneUnicaSulleProcedure")
  private Boolean relazioneUnicaSulleProcedure = null;

  @JsonProperty("opereUrbanizzazioneScomputo")
  private Boolean opereUrbanizzazioneScomputo = null;

  public AppaltoA7Type motivoUrgenza(MotivoUrgenzaEnum motivoUrgenza) {
    this.motivoUrgenza = motivoUrgenza;
    return this;
  }

   /**
   * Get motivoUrgenza
   * @return motivoUrgenza
  **/
  @Schema(required = true, description = "")
  public MotivoUrgenzaEnum getMotivoUrgenza() {
    return motivoUrgenza;
  }

  public void setMotivoUrgenza(MotivoUrgenzaEnum motivoUrgenza) {
    this.motivoUrgenza = motivoUrgenza;
  }

  public AppaltoA7Type linkDocumenti(String linkDocumenti) {
    this.linkDocumenti = linkDocumenti;
    return this;
  }

   /**
   * Link ai documenti relativi all’affidamento diretto in somma urgenza e protezione civile (co 10, art 140 nuovo codice)
   * @return linkDocumenti
  **/
  @Schema(description = "Link ai documenti relativi all’affidamento diretto in somma urgenza e protezione civile (co 10, art 140 nuovo codice)")
  public String getLinkDocumenti() {
    return linkDocumenti;
  }

  public void setLinkDocumenti(String linkDocumenti) {
    this.linkDocumenti = linkDocumenti;
  }

  public AppaltoA7Type relazioneUnicaSulleProcedure(Boolean relazioneUnicaSulleProcedure) {
    this.relazioneUnicaSulleProcedure = relazioneUnicaSulleProcedure;
    return this;
  }

   /**
   * Il sottoscritto dichiara che questa SA ha redatto la Relazione Unica sulle Procedure
   * @return relazioneUnicaSulleProcedure
  **/
  @Schema(description = "Il sottoscritto dichiara che questa SA ha redatto la Relazione Unica sulle Procedure")
  public Boolean isRelazioneUnicaSulleProcedure() {
    return relazioneUnicaSulleProcedure;
  }

  public void setRelazioneUnicaSulleProcedure(Boolean relazioneUnicaSulleProcedure) {
    this.relazioneUnicaSulleProcedure = relazioneUnicaSulleProcedure;
  }

  public AppaltoA7Type opereUrbanizzazioneScomputo(Boolean opereUrbanizzazioneScomputo) {
    this.opereUrbanizzazioneScomputo = opereUrbanizzazioneScomputo;
    return this;
  }

   /**
   * Opere di urbanizzazione a scomputo
   * @return opereUrbanizzazioneScomputo
  **/
  @Schema(description = "Opere di urbanizzazione a scomputo")
  public Boolean isOpereUrbanizzazioneScomputo() {
    return opereUrbanizzazioneScomputo;
  }

  public void setOpereUrbanizzazioneScomputo(Boolean opereUrbanizzazioneScomputo) {
    this.opereUrbanizzazioneScomputo = opereUrbanizzazioneScomputo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppaltoA7Type appaltoA7Type = (AppaltoA7Type) o;
    return Objects.equals(this.motivoUrgenza, appaltoA7Type.motivoUrgenza) &&
        Objects.equals(this.linkDocumenti, appaltoA7Type.linkDocumenti) &&
        Objects.equals(this.relazioneUnicaSulleProcedure, appaltoA7Type.relazioneUnicaSulleProcedure) &&
        Objects.equals(this.opereUrbanizzazioneScomputo, appaltoA7Type.opereUrbanizzazioneScomputo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(motivoUrgenza, linkDocumenti, relazioneUnicaSulleProcedure, opereUrbanizzazioneScomputo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppaltoA7Type {\n");
    
    sb.append("    motivoUrgenza: ").append(toIndentedString(motivoUrgenza)).append("\n");
    sb.append("    linkDocumenti: ").append(toIndentedString(linkDocumenti)).append("\n");
    sb.append("    relazioneUnicaSulleProcedure: ").append(toIndentedString(relazioneUnicaSulleProcedure)).append("\n");
    sb.append("    opereUrbanizzazioneScomputo: ").append(toIndentedString(opereUrbanizzazioneScomputo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
