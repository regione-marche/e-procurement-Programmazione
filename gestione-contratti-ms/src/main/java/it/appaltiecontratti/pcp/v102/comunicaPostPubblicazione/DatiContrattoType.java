/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * Oggetto che riporta i dati di sottoscrizione del contratto
 */
@Schema(description = "Oggetto che riporta i dati di sottoscrizione del contratto")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class DatiContrattoType {
  @JsonProperty("codiceAusa")
  private List<String> codiceAusa = new ArrayList<>();

  @JsonProperty("idPartecipante")
  private UUID idPartecipante = null;

  @JsonProperty("cig")
  private List<String> cig = new ArrayList<>();

  @JsonProperty("dataStipula")
  private java.time.OffsetDateTime dataStipula = null;

  @JsonProperty("dataEsecutivita")
  private java.time.OffsetDateTime dataEsecutivita = null;

  @JsonProperty("dataDecorrenza")
  private java.time.OffsetDateTime dataDecorrenza = null;

  @JsonProperty("dataScadenza")
  private java.time.OffsetDateTime dataScadenza = null;

  @JsonProperty("importoCauzione")
  private Double importoCauzione = null;

  public DatiContrattoType codiceAusa(List<String> codiceAusa) {
    this.codiceAusa = codiceAusa;
    return this;
  }

  public DatiContrattoType addCodiceAusaItem(String codiceAusaItem) {
    this.codiceAusa.add(codiceAusaItem);
    return this;
  }

   /**
   * Amministrazione firmataria
   * @return codiceAusa
  **/
  @Schema(required = true, description = "Amministrazione firmataria")
  public List<String> getCodiceAusa() {
    return codiceAusa;
  }

  public void setCodiceAusa(List<String> codiceAusa) {
    this.codiceAusa = codiceAusa;
  }

  public DatiContrattoType idPartecipante(UUID idPartecipante) {
    this.idPartecipante = idPartecipante;
    return this;
  }

   /**
   * id partecipante
   * @return idPartecipante
  **/
  @Schema(example = "f81d4fae-7dec-11d0-a765-00a0c91e6bf6", required = true, description = "id partecipante")
  public UUID getIdPartecipante() {
    return idPartecipante;
  }

  public void setIdPartecipante(UUID idPartecipante) {
    this.idPartecipante = idPartecipante;
  }

  public DatiContrattoType cig(List<String> cig) {
    this.cig = cig;
    return this;
  }

  public DatiContrattoType addCigItem(String cigItem) {
    this.cig.add(cigItem);
    return this;
  }

   /**
   * Lista dei lotti rientranti nel contratto
   * @return cig
  **/
  @Schema(required = true, description = "Lista dei lotti rientranti nel contratto")
  public List<String> getCig() {
    return cig;
  }

  public void setCig(List<String> cig) {
    this.cig = cig;
  }

  public DatiContrattoType dataStipula(java.time.OffsetDateTime dataStipula) {
    this.dataStipula = dataStipula;
    return this;
  }

   /**
   * Data stipula del contratto
   * @return dataStipula
  **/
  @Schema(description = "Data stipula del contratto")
  public java.time.OffsetDateTime getDataStipula() {
    return dataStipula;
  }

  public void setDataStipula(java.time.OffsetDateTime dataStipula) {
    this.dataStipula = dataStipula;
  }

  public DatiContrattoType dataEsecutivita(java.time.OffsetDateTime dataEsecutivita) {
    this.dataEsecutivita = dataEsecutivita;
    return this;
  }

   /**
   * Data esecutività del contratto (ove prevista)
   * @return dataEsecutivita
  **/
  @Schema(description = "Data esecutività del contratto (ove prevista)")
  public java.time.OffsetDateTime getDataEsecutivita() {
    return dataEsecutivita;
  }

  public void setDataEsecutivita(java.time.OffsetDateTime dataEsecutivita) {
    this.dataEsecutivita = dataEsecutivita;
  }

  public DatiContrattoType dataDecorrenza(java.time.OffsetDateTime dataDecorrenza) {
    this.dataDecorrenza = dataDecorrenza;
    return this;
  }

   /**
   * Data di decorrenza contrattuale
   * @return dataDecorrenza
  **/
  @Schema(required = true, description = "Data di decorrenza contrattuale")
  public java.time.OffsetDateTime getDataDecorrenza() {
    return dataDecorrenza;
  }

  public void setDataDecorrenza(java.time.OffsetDateTime dataDecorrenza) {
    this.dataDecorrenza = dataDecorrenza;
  }

  public DatiContrattoType dataScadenza(java.time.OffsetDateTime dataScadenza) {
    this.dataScadenza = dataScadenza;
    return this;
  }

   /**
   * Data di scadenza contrattuale
   * @return dataScadenza
  **/
  @Schema(required = true, description = "Data di scadenza contrattuale")
  public java.time.OffsetDateTime getDataScadenza() {
    return dataScadenza;
  }

  public void setDataScadenza(java.time.OffsetDateTime dataScadenza) {
    this.dataScadenza = dataScadenza;
  }

  public DatiContrattoType importoCauzione(Double importoCauzione) {
    this.importoCauzione = importoCauzione;
    return this;
  }

   /**
   * Importo cauzione definitiva in €
   * @return importoCauzione
  **/
  @Schema(required = true, description = "Importo cauzione definitiva in €")
  public Double getImportoCauzione() {
    return importoCauzione;
  }

  public void setImportoCauzione(Double importoCauzione) {
    this.importoCauzione = importoCauzione;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatiContrattoType datiContrattoType = (DatiContrattoType) o;
    return Objects.equals(this.codiceAusa, datiContrattoType.codiceAusa) &&
        Objects.equals(this.idPartecipante, datiContrattoType.idPartecipante) &&
        Objects.equals(this.cig, datiContrattoType.cig) &&
        Objects.equals(this.dataStipula, datiContrattoType.dataStipula) &&
        Objects.equals(this.dataEsecutivita, datiContrattoType.dataEsecutivita) &&
        Objects.equals(this.dataDecorrenza, datiContrattoType.dataDecorrenza) &&
        Objects.equals(this.dataScadenza, datiContrattoType.dataScadenza) &&
        Objects.equals(this.importoCauzione, datiContrattoType.importoCauzione);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codiceAusa, idPartecipante, cig, dataStipula, dataEsecutivita, dataDecorrenza, dataScadenza, importoCauzione);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatiContrattoType {\n");
    
    sb.append("    codiceAusa: ").append(toIndentedString(codiceAusa)).append("\n");
    sb.append("    idPartecipante: ").append(toIndentedString(idPartecipante)).append("\n");
    sb.append("    cig: ").append(toIndentedString(cig)).append("\n");
    sb.append("    dataStipula: ").append(toIndentedString(dataStipula)).append("\n");
    sb.append("    dataEsecutivita: ").append(toIndentedString(dataEsecutivita)).append("\n");
    sb.append("    dataDecorrenza: ").append(toIndentedString(dataDecorrenza)).append("\n");
    sb.append("    dataScadenza: ").append(toIndentedString(dataScadenza)).append("\n");
    sb.append("    importoCauzione: ").append(toIndentedString(importoCauzione)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
