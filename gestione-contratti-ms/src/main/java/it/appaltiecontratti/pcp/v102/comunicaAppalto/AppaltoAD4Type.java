/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.DatiBaseAppaltoADType;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.DatiBaseSubappaltiType;
import java.time.OffsetDateTime;
/**
 * AppaltoAD4Type
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:13:15.678079400+02:00[Europe/Berlin]")

public class AppaltoAD4Type {
  @JsonProperty("codiceAppalto")
  private String codiceAppalto = null;

  @JsonProperty("cig")
  private String cig = null;

  @JsonProperty("dataAdesione")
  private java.time.OffsetDateTime dataAdesione = null;

  @JsonProperty("relazioneUnicaSulleProcedure")
  private Boolean relazioneUnicaSulleProcedure = null;

  @JsonProperty("opereUrbanizzazioneScomputo")
  private Boolean opereUrbanizzazioneScomputo = null;

  @JsonProperty("datiBase")
  private DatiBaseAppaltoADType datiBase = null;

  @JsonProperty("datiBaseSubappalti")
  private DatiBaseSubappaltiType datiBaseSubappalti = null;

  public AppaltoAD4Type codiceAppalto(String codiceAppalto) {
    this.codiceAppalto = codiceAppalto;
    return this;
  }

   /**
   * Identificativo univoco dell&#x27;appalto definito dalla Stazione Appaltante
   * @return codiceAppalto
  **/
  @Schema(required = true, description = "Identificativo univoco dell'appalto definito dalla Stazione Appaltante")
  public String getCodiceAppalto() {
    return codiceAppalto;
  }

  public void setCodiceAppalto(String codiceAppalto) {
    this.codiceAppalto = codiceAppalto;
  }

  public AppaltoAD4Type cig(String cig) {
    this.cig = cig;
    return this;
  }

   /**
   * CIG relativo all’accordo quadro/convenzione cui si aderisce
   * @return cig
  **/
  @Schema(required = true, description = "CIG relativo all’accordo quadro/convenzione cui si aderisce")
  public String getCig() {
    return cig;
  }

  public void setCig(String cig) {
    this.cig = cig;
  }

  public AppaltoAD4Type dataAdesione(java.time.OffsetDateTime dataAdesione) {
    this.dataAdesione = dataAdesione;
    return this;
  }

   /**
   * Data di adesione all&#x27;accordo quadro/convenzione
   * @return dataAdesione
  **/
  @Schema(required = true, description = "Data di adesione all'accordo quadro/convenzione")
  public java.time.OffsetDateTime getDataAdesione() {
    return dataAdesione;
  }

  public void setDataAdesione(java.time.OffsetDateTime dataAdesione) {
    this.dataAdesione = dataAdesione;
  }

  public AppaltoAD4Type relazioneUnicaSulleProcedure(Boolean relazioneUnicaSulleProcedure) {
    this.relazioneUnicaSulleProcedure = relazioneUnicaSulleProcedure;
    return this;
  }

   /**
   * Il sottoscritto dichiara che questa SA ha redatto la Relazione Unica sulle Procedure
   * @return relazioneUnicaSulleProcedure
  **/
  @Schema(required = true, description = "Il sottoscritto dichiara che questa SA ha redatto la Relazione Unica sulle Procedure")
  public Boolean isRelazioneUnicaSulleProcedure() {
    return relazioneUnicaSulleProcedure;
  }

  public void setRelazioneUnicaSulleProcedure(Boolean relazioneUnicaSulleProcedure) {
    this.relazioneUnicaSulleProcedure = relazioneUnicaSulleProcedure;
  }

  public AppaltoAD4Type opereUrbanizzazioneScomputo(Boolean opereUrbanizzazioneScomputo) {
    this.opereUrbanizzazioneScomputo = opereUrbanizzazioneScomputo;
    return this;
  }

   /**
   * Opere di urbanizzazione a scomputo
   * @return opereUrbanizzazioneScomputo
  **/
  @Schema(required = true, description = "Opere di urbanizzazione a scomputo")
  public Boolean isOpereUrbanizzazioneScomputo() {
    return opereUrbanizzazioneScomputo;
  }

  public void setOpereUrbanizzazioneScomputo(Boolean opereUrbanizzazioneScomputo) {
    this.opereUrbanizzazioneScomputo = opereUrbanizzazioneScomputo;
  }

  public AppaltoAD4Type datiBase(DatiBaseAppaltoADType datiBase) {
    this.datiBase = datiBase;
    return this;
  }

   /**
   * Get datiBase
   * @return datiBase
  **/
  @Schema(required = true, description = "")
  public DatiBaseAppaltoADType getDatiBase() {
    return datiBase;
  }

  public void setDatiBase(DatiBaseAppaltoADType datiBase) {
    this.datiBase = datiBase;
  }

  public AppaltoAD4Type datiBaseSubappalti(DatiBaseSubappaltiType datiBaseSubappalti) {
    this.datiBaseSubappalti = datiBaseSubappalti;
    return this;
  }

   /**
   * Get datiBaseSubappalti
   * @return datiBaseSubappalti
  **/
  @Schema(description = "")
  public DatiBaseSubappaltiType getDatiBaseSubappalti() {
    return datiBaseSubappalti;
  }

  public void setDatiBaseSubappalti(DatiBaseSubappaltiType datiBaseSubappalti) {
    this.datiBaseSubappalti = datiBaseSubappalti;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppaltoAD4Type appaltoAD4Type = (AppaltoAD4Type) o;
    return Objects.equals(this.codiceAppalto, appaltoAD4Type.codiceAppalto) &&
        Objects.equals(this.cig, appaltoAD4Type.cig) &&
        Objects.equals(this.dataAdesione, appaltoAD4Type.dataAdesione) &&
        Objects.equals(this.relazioneUnicaSulleProcedure, appaltoAD4Type.relazioneUnicaSulleProcedure) &&
        Objects.equals(this.opereUrbanizzazioneScomputo, appaltoAD4Type.opereUrbanizzazioneScomputo) &&
        Objects.equals(this.datiBase, appaltoAD4Type.datiBase) &&
        Objects.equals(this.datiBaseSubappalti, appaltoAD4Type.datiBaseSubappalti);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codiceAppalto, cig, dataAdesione, relazioneUnicaSulleProcedure, opereUrbanizzazioneScomputo, datiBase, datiBaseSubappalti);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppaltoAD4Type {\n");
    
    sb.append("    codiceAppalto: ").append(toIndentedString(codiceAppalto)).append("\n");
    sb.append("    cig: ").append(toIndentedString(cig)).append("\n");
    sb.append("    dataAdesione: ").append(toIndentedString(dataAdesione)).append("\n");
    sb.append("    relazioneUnicaSulleProcedure: ").append(toIndentedString(relazioneUnicaSulleProcedure)).append("\n");
    sb.append("    opereUrbanizzazioneScomputo: ").append(toIndentedString(opereUrbanizzazioneScomputo)).append("\n");
    sb.append("    datiBase: ").append(toIndentedString(datiBase)).append("\n");
    sb.append("    datiBaseSubappalti: ").append(toIndentedString(datiBaseSubappalti)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
