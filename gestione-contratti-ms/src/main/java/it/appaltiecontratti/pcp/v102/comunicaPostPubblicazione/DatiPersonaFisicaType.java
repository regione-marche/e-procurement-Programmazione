/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.CodIstatEnum;
/**
 * Dati relativi alla persona fisica
 */
@Schema(description = "Dati relativi alla persona fisica")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class DatiPersonaFisicaType {
  @JsonProperty("codiceFiscale")
  private String codiceFiscale = null;

  @JsonProperty("cognome")
  private String cognome = null;

  @JsonProperty("nome")
  private String nome = null;

  @JsonProperty("telefono")
  private String telefono = null;

  @JsonProperty("fax")
  private String fax = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("indirizzo")
  private String indirizzo = null;

  @JsonProperty("cap")
  private String cap = null;

  @JsonProperty("codIstat")
  private CodIstatEnum codIstat = null;

  @JsonProperty("incaricatoEstero")
  private Boolean incaricatoEstero = null;

  public DatiPersonaFisicaType codiceFiscale(String codiceFiscale) {
    this.codiceFiscale = codiceFiscale;
    return this;
  }

   /**
   * Codice fiscale
   * @return codiceFiscale
  **/
  @Schema(description = "Codice fiscale")
  public String getCodiceFiscale() {
    return codiceFiscale;
  }

  public void setCodiceFiscale(String codiceFiscale) {
    this.codiceFiscale = codiceFiscale;
  }

  public DatiPersonaFisicaType cognome(String cognome) {
    this.cognome = cognome;
    return this;
  }

   /**
   * Cognome
   * @return cognome
  **/
  @Schema(description = "Cognome")
  public String getCognome() {
    return cognome;
  }

  public void setCognome(String cognome) {
    this.cognome = cognome;
  }

  public DatiPersonaFisicaType nome(String nome) {
    this.nome = nome;
    return this;
  }

   /**
   * Nome
   * @return nome
  **/
  @Schema(description = "Nome")
  public String getNome() {
    return nome;
  }

  public void setNome(String nome) {
    this.nome = nome;
  }

  public DatiPersonaFisicaType telefono(String telefono) {
    this.telefono = telefono;
    return this;
  }

   /**
   * Telefono
   * @return telefono
  **/
  @Schema(description = "Telefono")
  public String getTelefono() {
    return telefono;
  }

  public void setTelefono(String telefono) {
    this.telefono = telefono;
  }

  public DatiPersonaFisicaType fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * Fax
   * @return fax
  **/
  @Schema(description = "Fax")
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }

  public DatiPersonaFisicaType email(String email) {
    this.email = email;
    return this;
  }

   /**
   * E-mail
   * @return email
  **/
  @Schema(description = "E-mail")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public DatiPersonaFisicaType indirizzo(String indirizzo) {
    this.indirizzo = indirizzo;
    return this;
  }

   /**
   * Indirizzo
   * @return indirizzo
  **/
  @Schema(description = "Indirizzo")
  public String getIndirizzo() {
    return indirizzo;
  }

  public void setIndirizzo(String indirizzo) {
    this.indirizzo = indirizzo;
  }

  public DatiPersonaFisicaType cap(String cap) {
    this.cap = cap;
    return this;
  }

   /**
   * CAP
   * @return cap
  **/
  @Schema(description = "CAP")
  public String getCap() {
    return cap;
  }

  public void setCap(String cap) {
    this.cap = cap;
  }

  public DatiPersonaFisicaType codIstat(CodIstatEnum codIstat) {
    this.codIstat = codIstat;
    return this;
  }

   /**
   * Get codIstat
   * @return codIstat
  **/
  @Schema(description = "")
  public CodIstatEnum getCodIstat() {
    return codIstat;
  }

  public void setCodIstat(CodIstatEnum codIstat) {
    this.codIstat = codIstat;
  }

  public DatiPersonaFisicaType incaricatoEstero(Boolean incaricatoEstero) {
    this.incaricatoEstero = incaricatoEstero;
    return this;
  }

   /**
   * Incaricato Estero
   * @return incaricatoEstero
  **/
  @Schema(description = "Incaricato Estero")
  public Boolean isIncaricatoEstero() {
    return incaricatoEstero;
  }

  public void setIncaricatoEstero(Boolean incaricatoEstero) {
    this.incaricatoEstero = incaricatoEstero;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatiPersonaFisicaType datiPersonaFisicaType = (DatiPersonaFisicaType) o;
    return Objects.equals(this.codiceFiscale, datiPersonaFisicaType.codiceFiscale) &&
        Objects.equals(this.cognome, datiPersonaFisicaType.cognome) &&
        Objects.equals(this.nome, datiPersonaFisicaType.nome) &&
        Objects.equals(this.telefono, datiPersonaFisicaType.telefono) &&
        Objects.equals(this.fax, datiPersonaFisicaType.fax) &&
        Objects.equals(this.email, datiPersonaFisicaType.email) &&
        Objects.equals(this.indirizzo, datiPersonaFisicaType.indirizzo) &&
        Objects.equals(this.cap, datiPersonaFisicaType.cap) &&
        Objects.equals(this.codIstat, datiPersonaFisicaType.codIstat) &&
        Objects.equals(this.incaricatoEstero, datiPersonaFisicaType.incaricatoEstero);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codiceFiscale, cognome, nome, telefono, fax, email, indirizzo, cap, codIstat, incaricatoEstero);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatiPersonaFisicaType {\n");
    
    sb.append("    codiceFiscale: ").append(toIndentedString(codiceFiscale)).append("\n");
    sb.append("    cognome: ").append(toIndentedString(cognome)).append("\n");
    sb.append("    nome: ").append(toIndentedString(nome)).append("\n");
    sb.append("    telefono: ").append(toIndentedString(telefono)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    indirizzo: ").append(toIndentedString(indirizzo)).append("\n");
    sb.append("    cap: ").append(toIndentedString(cap)).append("\n");
    sb.append("    codIstat: ").append(toIndentedString(codIstat)).append("\n");
    sb.append("    incaricatoEstero: ").append(toIndentedString(incaricatoEstero)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
