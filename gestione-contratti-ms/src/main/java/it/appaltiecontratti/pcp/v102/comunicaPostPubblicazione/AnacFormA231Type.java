/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.AggiudicazioneA231Type;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.AppaltoA231Type;
import java.util.ArrayList;
import java.util.List;
/**
 * Contiene tutti i dati relativi all&#x27;aggiudicazione.
 */
@Schema(description = "Contiene tutti i dati relativi all'aggiudicazione.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class AnacFormA231Type {
  @JsonProperty("appalto")
  private AppaltoA231Type appalto = null;

  @JsonProperty("aggiudicazioni")
  private List<AggiudicazioneA231Type> aggiudicazioni = new ArrayList<>();

  public AnacFormA231Type appalto(AppaltoA231Type appalto) {
    this.appalto = appalto;
    return this;
  }

   /**
   * Get appalto
   * @return appalto
  **/
  @Schema(required = true, description = "")
  public AppaltoA231Type getAppalto() {
    return appalto;
  }

  public void setAppalto(AppaltoA231Type appalto) {
    this.appalto = appalto;
  }

  public AnacFormA231Type aggiudicazioni(List<AggiudicazioneA231Type> aggiudicazioni) {
    this.aggiudicazioni = aggiudicazioni;
    return this;
  }

  public AnacFormA231Type addAggiudicazioniItem(AggiudicazioneA231Type aggiudicazioniItem) {
    this.aggiudicazioni.add(aggiudicazioniItem);
    return this;
  }

   /**
   * Dati relativi alle aggiudicazioni
   * @return aggiudicazioni
  **/
  @Schema(required = true, description = "Dati relativi alle aggiudicazioni")
  public List<AggiudicazioneA231Type> getAggiudicazioni() {
    return aggiudicazioni;
  }

  public void setAggiudicazioni(List<AggiudicazioneA231Type> aggiudicazioni) {
    this.aggiudicazioni = aggiudicazioni;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnacFormA231Type anacFormA231Type = (AnacFormA231Type) o;
    return Objects.equals(this.appalto, anacFormA231Type.appalto) &&
        Objects.equals(this.aggiudicazioni, anacFormA231Type.aggiudicazioni);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appalto, aggiudicazioni);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnacFormA231Type {\n");
    
    sb.append("    appalto: ").append(toIndentedString(appalto)).append("\n");
    sb.append("    aggiudicazioni: ").append(toIndentedString(aggiudicazioni)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
