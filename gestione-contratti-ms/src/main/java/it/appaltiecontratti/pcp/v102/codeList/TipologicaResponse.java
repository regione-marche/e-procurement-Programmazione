/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per il recupero delle tipologiche.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.codeList;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.codeList.BaseResponse;
import it.appaltiecontratti.pcp.v102.codeList.PaginazioneType;
import it.appaltiecontratti.pcp.v102.codeList.TipologicaType;
/**
 * TipologicaResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:13:02.813329700+02:00[Europe/Berlin]")

public class TipologicaResponse extends BaseResponse {
  @JsonProperty("totRows")
  private Integer totRows = null;

  @JsonProperty("totPages")
  private Integer totPages = null;

  @JsonProperty("currentPage")
  private Integer currentPage = null;

  @JsonProperty("elementPage")
  private Integer elementPage = null;

  @JsonProperty("tipologica")
  private TipologicaType tipologica = null;

  public TipologicaResponse totRows(Integer totRows) {
    this.totRows = totRows;
    return this;
  }

   /**
   * Numero totale di record risultante dalla ricerca
   * @return totRows
  **/
  @Schema(description = "Numero totale di record risultante dalla ricerca")
  public Integer getTotRows() {
    return totRows;
  }

  public void setTotRows(Integer totRows) {
    this.totRows = totRows;
  }

  public TipologicaResponse totPages(Integer totPages) {
    this.totPages = totPages;
    return this;
  }

   /**
   * Numero totale di pagine risultanti dalla ricerca
   * @return totPages
  **/
  @Schema(description = "Numero totale di pagine risultanti dalla ricerca")
  public Integer getTotPages() {
    return totPages;
  }

  public void setTotPages(Integer totPages) {
    this.totPages = totPages;
  }

  public TipologicaResponse currentPage(Integer currentPage) {
    this.currentPage = currentPage;
    return this;
  }

   /**
   * Numero di pagina corrente
   * @return currentPage
  **/
  @Schema(description = "Numero di pagina corrente")
  public Integer getCurrentPage() {
    return currentPage;
  }

  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  public TipologicaResponse elementPage(Integer elementPage) {
    this.elementPage = elementPage;
    return this;
  }

   /**
   * Numero di elementi per pagina
   * @return elementPage
  **/
  @Schema(description = "Numero di elementi per pagina")
  public Integer getElementPage() {
    return elementPage;
  }

  public void setElementPage(Integer elementPage) {
    this.elementPage = elementPage;
  }

  public TipologicaResponse tipologica(TipologicaType tipologica) {
    this.tipologica = tipologica;
    return this;
  }

   /**
   * Get tipologica
   * @return tipologica
  **/
  @Schema(description = "")
  public TipologicaType getTipologica() {
    return tipologica;
  }

  public void setTipologica(TipologicaType tipologica) {
    this.tipologica = tipologica;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TipologicaResponse tipologicaResponse = (TipologicaResponse) o;
    return Objects.equals(this.totRows, tipologicaResponse.totRows) &&
        Objects.equals(this.totPages, tipologicaResponse.totPages) &&
        Objects.equals(this.currentPage, tipologicaResponse.currentPage) &&
        Objects.equals(this.elementPage, tipologicaResponse.elementPage) &&
        Objects.equals(this.tipologica, tipologicaResponse.tipologica) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totRows, totPages, currentPage, elementPage, tipologica, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TipologicaResponse {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    totRows: ").append(toIndentedString(totRows)).append("\n");
    sb.append("    totPages: ").append(toIndentedString(totPages)).append("\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    elementPage: ").append(toIndentedString(elementPage)).append("\n");
    sb.append("    tipologica: ").append(toIndentedString(tipologica)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
