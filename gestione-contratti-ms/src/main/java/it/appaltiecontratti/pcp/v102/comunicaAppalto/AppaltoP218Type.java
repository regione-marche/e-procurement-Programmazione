/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.AppaltoP18Type;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.DatiBaseAppaltoType;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.DatiBaseProceduraCompletoType;
/**
 * AppaltoP218Type
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:13:15.678079400+02:00[Europe/Berlin]")

public class AppaltoP218Type extends AppaltoP18Type {
  @JsonProperty("datiBase")
  private DatiBaseAppaltoType datiBase = null;

  @JsonProperty("datiBaseStrumentiProcedura")
  private AllOfAppaltoP218TypeDatiBaseStrumentiProcedura datiBaseStrumentiProcedura = null;

  @JsonProperty("datiBaseProcedura")
  private DatiBaseProceduraCompletoType datiBaseProcedura = null;

  public AppaltoP218Type datiBase(DatiBaseAppaltoType datiBase) {
    this.datiBase = datiBase;
    return this;
  }

   /**
   * Get datiBase
   * @return datiBase
  **/
  @Schema(required = true, description = "")
  public DatiBaseAppaltoType getDatiBase() {
    return datiBase;
  }

  public void setDatiBase(DatiBaseAppaltoType datiBase) {
    this.datiBase = datiBase;
  }

  public AppaltoP218Type datiBaseStrumentiProcedura(AllOfAppaltoP218TypeDatiBaseStrumentiProcedura datiBaseStrumentiProcedura) {
    this.datiBaseStrumentiProcedura = datiBaseStrumentiProcedura;
    return this;
  }

   /**
   * Get datiBaseStrumentiProcedura
   * @return datiBaseStrumentiProcedura
  **/
  @Schema(description = "")
  public AllOfAppaltoP218TypeDatiBaseStrumentiProcedura getDatiBaseStrumentiProcedura() {
    return datiBaseStrumentiProcedura;
  }

  public void setDatiBaseStrumentiProcedura(AllOfAppaltoP218TypeDatiBaseStrumentiProcedura datiBaseStrumentiProcedura) {
    this.datiBaseStrumentiProcedura = datiBaseStrumentiProcedura;
  }

  public AppaltoP218Type datiBaseProcedura(DatiBaseProceduraCompletoType datiBaseProcedura) {
    this.datiBaseProcedura = datiBaseProcedura;
    return this;
  }

   /**
   * Get datiBaseProcedura
   * @return datiBaseProcedura
  **/
  @Schema(required = true, description = "")
  public DatiBaseProceduraCompletoType getDatiBaseProcedura() {
    return datiBaseProcedura;
  }

  public void setDatiBaseProcedura(DatiBaseProceduraCompletoType datiBaseProcedura) {
    this.datiBaseProcedura = datiBaseProcedura;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppaltoP218Type appaltoP218Type = (AppaltoP218Type) o;
    return Objects.equals(this.datiBase, appaltoP218Type.datiBase) &&
        Objects.equals(this.datiBaseStrumentiProcedura, appaltoP218Type.datiBaseStrumentiProcedura) &&
        Objects.equals(this.datiBaseProcedura, appaltoP218Type.datiBaseProcedura) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datiBase, datiBaseStrumentiProcedura, datiBaseProcedura, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppaltoP218Type {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    datiBase: ").append(toIndentedString(datiBase)).append("\n");
    sb.append("    datiBaseStrumentiProcedura: ").append(toIndentedString(datiBaseStrumentiProcedura)).append("\n");
    sb.append("    datiBaseProcedura: ").append(toIndentedString(datiBaseProcedura)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
