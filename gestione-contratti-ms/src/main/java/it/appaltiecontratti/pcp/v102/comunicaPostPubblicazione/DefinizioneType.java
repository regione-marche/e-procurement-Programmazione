/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * Dati delle modalità di definizione
 */
@Schema(description = "Dati delle modalità di definizione")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class DefinizioneType {
  @JsonProperty("ulterioriRiserve")
  private Boolean ulterioriRiserve = null;

  @JsonProperty("numeroRiserveDefinite")
  private BigDecimal numeroRiserveDefinite = null;

  @JsonProperty("numeroRiserveDaDefinire")
  private BigDecimal numeroRiserveDaDefinire = null;

  @JsonProperty("impTotaleRichiesto")
  private Double impTotaleRichiesto = null;

  @JsonProperty("impTotaleDefinizione")
  private Double impTotaleDefinizione = null;

  public DefinizioneType ulterioriRiserve(Boolean ulterioriRiserve) {
    this.ulterioriRiserve = ulterioriRiserve;
    return this;
  }

   /**
   * Ulteriori riserve definite o da definire con diversa modalità
   * @return ulterioriRiserve
  **/
  @Schema(description = "Ulteriori riserve definite o da definire con diversa modalità")
  public Boolean isUlterioriRiserve() {
    return ulterioriRiserve;
  }

  public void setUlterioriRiserve(Boolean ulterioriRiserve) {
    this.ulterioriRiserve = ulterioriRiserve;
  }

  public DefinizioneType numeroRiserveDefinite(BigDecimal numeroRiserveDefinite) {
    this.numeroRiserveDefinite = numeroRiserveDefinite;
    return this;
  }

   /**
   * Numero riserve definite
   * @return numeroRiserveDefinite
  **/
  @Schema(description = "Numero riserve definite")
  public BigDecimal getNumeroRiserveDefinite() {
    return numeroRiserveDefinite;
  }

  public void setNumeroRiserveDefinite(BigDecimal numeroRiserveDefinite) {
    this.numeroRiserveDefinite = numeroRiserveDefinite;
  }

  public DefinizioneType numeroRiserveDaDefinire(BigDecimal numeroRiserveDaDefinire) {
    this.numeroRiserveDaDefinire = numeroRiserveDaDefinire;
    return this;
  }

   /**
   * Numero riserve da definire
   * @return numeroRiserveDaDefinire
  **/
  @Schema(description = "Numero riserve da definire")
  public BigDecimal getNumeroRiserveDaDefinire() {
    return numeroRiserveDaDefinire;
  }

  public void setNumeroRiserveDaDefinire(BigDecimal numeroRiserveDaDefinire) {
    this.numeroRiserveDaDefinire = numeroRiserveDaDefinire;
  }

  public DefinizioneType impTotaleRichiesto(Double impTotaleRichiesto) {
    this.impTotaleRichiesto = impTotaleRichiesto;
    return this;
  }

   /**
   * Importo totale richiesto
   * @return impTotaleRichiesto
  **/
  @Schema(description = "Importo totale richiesto")
  public Double getImpTotaleRichiesto() {
    return impTotaleRichiesto;
  }

  public void setImpTotaleRichiesto(Double impTotaleRichiesto) {
    this.impTotaleRichiesto = impTotaleRichiesto;
  }

  public DefinizioneType impTotaleDefinizione(Double impTotaleDefinizione) {
    this.impTotaleDefinizione = impTotaleDefinizione;
    return this;
  }

   /**
   * Importo totale eventuale definizione
   * @return impTotaleDefinizione
  **/
  @Schema(description = "Importo totale eventuale definizione")
  public Double getImpTotaleDefinizione() {
    return impTotaleDefinizione;
  }

  public void setImpTotaleDefinizione(Double impTotaleDefinizione) {
    this.impTotaleDefinizione = impTotaleDefinizione;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DefinizioneType definizioneType = (DefinizioneType) o;
    return Objects.equals(this.ulterioriRiserve, definizioneType.ulterioriRiserve) &&
        Objects.equals(this.numeroRiserveDefinite, definizioneType.numeroRiserveDefinite) &&
        Objects.equals(this.numeroRiserveDaDefinire, definizioneType.numeroRiserveDaDefinire) &&
        Objects.equals(this.impTotaleRichiesto, definizioneType.impTotaleRichiesto) &&
        Objects.equals(this.impTotaleDefinizione, definizioneType.impTotaleDefinizione);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ulterioriRiserve, numeroRiserveDefinite, numeroRiserveDaDefinire, impTotaleRichiesto, impTotaleDefinizione);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DefinizioneType {\n");
    
    sb.append("    ulterioriRiserve: ").append(toIndentedString(ulterioriRiserve)).append("\n");
    sb.append("    numeroRiserveDefinite: ").append(toIndentedString(numeroRiserveDefinite)).append("\n");
    sb.append("    numeroRiserveDaDefinire: ").append(toIndentedString(numeroRiserveDaDefinire)).append("\n");
    sb.append("    impTotaleRichiesto: ").append(toIndentedString(impTotaleRichiesto)).append("\n");
    sb.append("    impTotaleDefinizione: ").append(toIndentedString(impTotaleDefinizione)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
