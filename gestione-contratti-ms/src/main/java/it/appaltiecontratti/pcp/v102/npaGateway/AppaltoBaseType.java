/*
 * npa-gateway-ms API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.2-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.npaGateway;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.npaGateway.StatoAppaltoEnum;
import java.util.UUID;
/**
 * AppaltoBaseType
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:13:30.797833200+02:00[Europe/Berlin]")

public class AppaltoBaseType {
  @JsonProperty("idAppalto")
  private UUID idAppalto = null;

  @JsonProperty("codiceAppalto")
  private String codiceAppalto = null;

  @JsonProperty("oggetto")
  private String oggetto = null;

  @JsonProperty("dataCreazione")
  private String dataCreazione = null;

  @JsonProperty("stato")
  private StatoAppaltoEnum stato = null;

  public AppaltoBaseType idAppalto(UUID idAppalto) {
    this.idAppalto = idAppalto;
    return this;
  }

   /**
   * Get idAppalto
   * @return idAppalto
  **/
  @Schema(description = "")
  public UUID getIdAppalto() {
    return idAppalto;
  }

  public void setIdAppalto(UUID idAppalto) {
    this.idAppalto = idAppalto;
  }

  public AppaltoBaseType codiceAppalto(String codiceAppalto) {
    this.codiceAppalto = codiceAppalto;
    return this;
  }

   /**
   * Get codiceAppalto
   * @return codiceAppalto
  **/
  @Schema(description = "")
  public String getCodiceAppalto() {
    return codiceAppalto;
  }

  public void setCodiceAppalto(String codiceAppalto) {
    this.codiceAppalto = codiceAppalto;
  }

  public AppaltoBaseType oggetto(String oggetto) {
    this.oggetto = oggetto;
    return this;
  }

   /**
   * Get oggetto
   * @return oggetto
  **/
  @Schema(description = "")
  public String getOggetto() {
    return oggetto;
  }

  public void setOggetto(String oggetto) {
    this.oggetto = oggetto;
  }

  public AppaltoBaseType dataCreazione(String dataCreazione) {
    this.dataCreazione = dataCreazione;
    return this;
  }

   /**
   * Get dataCreazione
   * @return dataCreazione
  **/
  @Schema(description = "")
  public String getDataCreazione() {
    return dataCreazione;
  }

  public void setDataCreazione(String dataCreazione) {
    this.dataCreazione = dataCreazione;
  }

  public AppaltoBaseType stato(StatoAppaltoEnum stato) {
    this.stato = stato;
    return this;
  }

   /**
   * Get stato
   * @return stato
  **/
  @Schema(description = "")
  public StatoAppaltoEnum getStato() {
    return stato;
  }

  public void setStato(StatoAppaltoEnum stato) {
    this.stato = stato;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppaltoBaseType appaltoBaseType = (AppaltoBaseType) o;
    return Objects.equals(this.idAppalto, appaltoBaseType.idAppalto) &&
        Objects.equals(this.codiceAppalto, appaltoBaseType.codiceAppalto) &&
        Objects.equals(this.oggetto, appaltoBaseType.oggetto) &&
        Objects.equals(this.dataCreazione, appaltoBaseType.dataCreazione) &&
        Objects.equals(this.stato, appaltoBaseType.stato);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idAppalto, codiceAppalto, oggetto, dataCreazione, stato);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppaltoBaseType {\n");
    
    sb.append("    idAppalto: ").append(toIndentedString(idAppalto)).append("\n");
    sb.append("    codiceAppalto: ").append(toIndentedString(codiceAppalto)).append("\n");
    sb.append("    oggetto: ").append(toIndentedString(oggetto)).append("\n");
    sb.append("    dataCreazione: ").append(toIndentedString(dataCreazione)).append("\n");
    sb.append("    stato: ").append(toIndentedString(stato)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
