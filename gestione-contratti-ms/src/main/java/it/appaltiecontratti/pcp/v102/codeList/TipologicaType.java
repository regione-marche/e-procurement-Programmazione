/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per il recupero delle tipologiche.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.codeList;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.codeList.DatiTipologicaType;
import it.appaltiecontratti.pcp.v102.codeList.TipologicaBaseType;
import java.util.ArrayList;
import java.util.List;
/**
 * Oggetto generico di una tipologica
 */
@Schema(description = "Oggetto generico di una tipologica")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:13:02.813329700+02:00[Europe/Berlin]")

public class TipologicaType extends TipologicaBaseType {
  @JsonProperty("elenco")
  private List<DatiTipologicaType> elenco = null;

  public TipologicaType elenco(List<DatiTipologicaType> elenco) {
    this.elenco = elenco;
    return this;
  }

  public TipologicaType addElencoItem(DatiTipologicaType elencoItem) {
    if (this.elenco == null) {
      this.elenco = new ArrayList<>();
    }
    this.elenco.add(elencoItem);
    return this;
  }

   /**
   * Elenco di una tipologica
   * @return elenco
  **/
  @Schema(description = "Elenco di una tipologica")
  public List<DatiTipologicaType> getElenco() {
    return elenco;
  }

  public void setElenco(List<DatiTipologicaType> elenco) {
    this.elenco = elenco;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TipologicaType tipologicaType = (TipologicaType) o;
    return Objects.equals(this.elenco, tipologicaType.elenco) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(elenco, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TipologicaType {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    elenco: ").append(toIndentedString(elenco)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
