/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.AppaltoAType;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.ModalitaRiaggiudicazioneAffidamentoEnum;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.MotivoUrgenzaEnum;
/**
 * Oggetto che riporta i dati inerenti la fase di aggiudicazione.
 */
@Schema(description = "Oggetto che riporta i dati inerenti la fase di aggiudicazione.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class AppaltoA129Type extends AppaltoAType {
  @JsonProperty("relazioneUnicaSulleProcedure")
  private Boolean relazioneUnicaSulleProcedure = null;

  @JsonProperty("opereUrbanizzazioneScomputo")
  private Boolean opereUrbanizzazioneScomputo = null;

  public AppaltoA129Type relazioneUnicaSulleProcedure(Boolean relazioneUnicaSulleProcedure) {
    this.relazioneUnicaSulleProcedure = relazioneUnicaSulleProcedure;
    return this;
  }

   /**
   * Il sottoscritto dichiara che questa SA ha redatto la Relazione Unica sulle Procedure
   * @return relazioneUnicaSulleProcedure
  **/
  @Schema(required = true, description = "Il sottoscritto dichiara che questa SA ha redatto la Relazione Unica sulle Procedure")
  public Boolean isRelazioneUnicaSulleProcedure() {
    return relazioneUnicaSulleProcedure;
  }

  public void setRelazioneUnicaSulleProcedure(Boolean relazioneUnicaSulleProcedure) {
    this.relazioneUnicaSulleProcedure = relazioneUnicaSulleProcedure;
  }

  public AppaltoA129Type opereUrbanizzazioneScomputo(Boolean opereUrbanizzazioneScomputo) {
    this.opereUrbanizzazioneScomputo = opereUrbanizzazioneScomputo;
    return this;
  }

   /**
   * Opere di urbanizzazione a scomputo
   * @return opereUrbanizzazioneScomputo
  **/
  @Schema(required = true, description = "Opere di urbanizzazione a scomputo")
  public Boolean isOpereUrbanizzazioneScomputo() {
    return opereUrbanizzazioneScomputo;
  }

  public void setOpereUrbanizzazioneScomputo(Boolean opereUrbanizzazioneScomputo) {
    this.opereUrbanizzazioneScomputo = opereUrbanizzazioneScomputo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppaltoA129Type appaltoA129Type = (AppaltoA129Type) o;
    return Objects.equals(this.relazioneUnicaSulleProcedure, appaltoA129Type.relazioneUnicaSulleProcedure) &&
        Objects.equals(this.opereUrbanizzazioneScomputo, appaltoA129Type.opereUrbanizzazioneScomputo) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(relazioneUnicaSulleProcedure, opereUrbanizzazioneScomputo, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppaltoA129Type {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    relazioneUnicaSulleProcedure: ").append(toIndentedString(relazioneUnicaSulleProcedure)).append("\n");
    sb.append("    opereUrbanizzazioneScomputo: ").append(toIndentedString(opereUrbanizzazioneScomputo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
