/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
/**
 * Oggetto che riporta tutti i dati degli accordi bonari
 */
@Schema(description = "Oggetto che riporta tutti i dati degli accordi bonari")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class AccordoBonarioType {
  @JsonProperty("dataAccordo")
  private java.time.OffsetDateTime dataAccordo = null;

  @JsonProperty("oneriDerivanti")
  private Double oneriDerivanti = null;

  @JsonProperty("numeroRiserve")
  private BigDecimal numeroRiserve = null;

  public AccordoBonarioType dataAccordo(java.time.OffsetDateTime dataAccordo) {
    this.dataAccordo = dataAccordo;
    return this;
  }

   /**
   * Data dell’accordo bonario
   * @return dataAccordo
  **/
  @Schema(required = true, description = "Data dell’accordo bonario")
  public java.time.OffsetDateTime getDataAccordo() {
    return dataAccordo;
  }

  public void setDataAccordo(java.time.OffsetDateTime dataAccordo) {
    this.dataAccordo = dataAccordo;
  }

  public AccordoBonarioType oneriDerivanti(Double oneriDerivanti) {
    this.oneriDerivanti = oneriDerivanti;
    return this;
  }

   /**
   * Oneri derivanti
   * @return oneriDerivanti
  **/
  @Schema(description = "Oneri derivanti")
  public Double getOneriDerivanti() {
    return oneriDerivanti;
  }

  public void setOneriDerivanti(Double oneriDerivanti) {
    this.oneriDerivanti = oneriDerivanti;
  }

  public AccordoBonarioType numeroRiserve(BigDecimal numeroRiserve) {
    this.numeroRiserve = numeroRiserve;
    return this;
  }

   /**
   * Numero di riserve transate
   * @return numeroRiserve
  **/
  @Schema(description = "Numero di riserve transate")
  public BigDecimal getNumeroRiserve() {
    return numeroRiserve;
  }

  public void setNumeroRiserve(BigDecimal numeroRiserve) {
    this.numeroRiserve = numeroRiserve;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccordoBonarioType accordoBonarioType = (AccordoBonarioType) o;
    return Objects.equals(this.dataAccordo, accordoBonarioType.dataAccordo) &&
        Objects.equals(this.oneriDerivanti, accordoBonarioType.oneriDerivanti) &&
        Objects.equals(this.numeroRiserve, accordoBonarioType.numeroRiserve);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataAccordo, oneriDerivanti, numeroRiserve);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccordoBonarioType {\n");
    
    sb.append("    dataAccordo: ").append(toIndentedString(dataAccordo)).append("\n");
    sb.append("    oneriDerivanti: ").append(toIndentedString(oneriDerivanti)).append("\n");
    sb.append("    numeroRiserve: ").append(toIndentedString(numeroRiserve)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
