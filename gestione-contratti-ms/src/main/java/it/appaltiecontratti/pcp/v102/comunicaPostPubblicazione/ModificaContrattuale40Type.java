/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.MotiviRevisionePrezziEnum;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.QuadroEconomicoConcessioniType;
import java.time.OffsetDateTime;
/**
 * Oggetto che riporta tutti i dati della modifica contrattuale
 */
@Schema(description = "Oggetto che riporta tutti i dati della modifica contrattuale")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class ModificaContrattuale40Type {
  @JsonProperty("dataApprovazione")
  private java.time.OffsetDateTime dataApprovazione = null;

  @JsonProperty("urlDocumentazione")
  private String urlDocumentazione = null;

  @JsonProperty("motivoRevisionePrezzi")
  private MotiviRevisionePrezziEnum motivoRevisionePrezzi = null;

  @JsonProperty("cigNuovaProcedura")
  private String cigNuovaProcedura = null;

  @JsonProperty("quadroEconomicoConcessioniRideterminato")
  private QuadroEconomicoConcessioniType quadroEconomicoConcessioniRideterminato = null;

  public ModificaContrattuale40Type dataApprovazione(java.time.OffsetDateTime dataApprovazione) {
    this.dataApprovazione = dataApprovazione;
    return this;
  }

   /**
   * Data di approvazione della modifica contrattuale
   * @return dataApprovazione
  **/
  @Schema(description = "Data di approvazione della modifica contrattuale")
  public java.time.OffsetDateTime getDataApprovazione() {
    return dataApprovazione;
  }

  public void setDataApprovazione(java.time.OffsetDateTime dataApprovazione) {
    this.dataApprovazione = dataApprovazione;
  }

  public ModificaContrattuale40Type urlDocumentazione(String urlDocumentazione) {
    this.urlDocumentazione = urlDocumentazione;
    return this;
  }

   /**
   * URL documentazione varianti in corso d’opera
   * @return urlDocumentazione
  **/
  @Schema(description = "URL documentazione varianti in corso d’opera")
  public String getUrlDocumentazione() {
    return urlDocumentazione;
  }

  public void setUrlDocumentazione(String urlDocumentazione) {
    this.urlDocumentazione = urlDocumentazione;
  }

  public ModificaContrattuale40Type motivoRevisionePrezzi(MotiviRevisionePrezziEnum motivoRevisionePrezzi) {
    this.motivoRevisionePrezzi = motivoRevisionePrezzi;
    return this;
  }

   /**
   * Get motivoRevisionePrezzi
   * @return motivoRevisionePrezzi
  **/
  @Schema(description = "")
  public MotiviRevisionePrezziEnum getMotivoRevisionePrezzi() {
    return motivoRevisionePrezzi;
  }

  public void setMotivoRevisionePrezzi(MotiviRevisionePrezziEnum motivoRevisionePrezzi) {
    this.motivoRevisionePrezzi = motivoRevisionePrezzi;
  }

  public ModificaContrattuale40Type cigNuovaProcedura(String cigNuovaProcedura) {
    this.cigNuovaProcedura = cigNuovaProcedura;
    return this;
  }

   /**
   * CIG della nuova procedura avviata
   * @return cigNuovaProcedura
  **/
  @Schema(description = "CIG della nuova procedura avviata")
  public String getCigNuovaProcedura() {
    return cigNuovaProcedura;
  }

  public void setCigNuovaProcedura(String cigNuovaProcedura) {
    this.cigNuovaProcedura = cigNuovaProcedura;
  }

  public ModificaContrattuale40Type quadroEconomicoConcessioniRideterminato(QuadroEconomicoConcessioniType quadroEconomicoConcessioniRideterminato) {
    this.quadroEconomicoConcessioniRideterminato = quadroEconomicoConcessioniRideterminato;
    return this;
  }

   /**
   * Get quadroEconomicoConcessioniRideterminato
   * @return quadroEconomicoConcessioniRideterminato
  **/
  @Schema(description = "")
  public QuadroEconomicoConcessioniType getQuadroEconomicoConcessioniRideterminato() {
    return quadroEconomicoConcessioniRideterminato;
  }

  public void setQuadroEconomicoConcessioniRideterminato(QuadroEconomicoConcessioniType quadroEconomicoConcessioniRideterminato) {
    this.quadroEconomicoConcessioniRideterminato = quadroEconomicoConcessioniRideterminato;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModificaContrattuale40Type modificaContrattuale40Type = (ModificaContrattuale40Type) o;
    return Objects.equals(this.dataApprovazione, modificaContrattuale40Type.dataApprovazione) &&
        Objects.equals(this.urlDocumentazione, modificaContrattuale40Type.urlDocumentazione) &&
        Objects.equals(this.motivoRevisionePrezzi, modificaContrattuale40Type.motivoRevisionePrezzi) &&
        Objects.equals(this.cigNuovaProcedura, modificaContrattuale40Type.cigNuovaProcedura) &&
        Objects.equals(this.quadroEconomicoConcessioniRideterminato, modificaContrattuale40Type.quadroEconomicoConcessioniRideterminato);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataApprovazione, urlDocumentazione, motivoRevisionePrezzi, cigNuovaProcedura, quadroEconomicoConcessioniRideterminato);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModificaContrattuale40Type {\n");
    
    sb.append("    dataApprovazione: ").append(toIndentedString(dataApprovazione)).append("\n");
    sb.append("    urlDocumentazione: ").append(toIndentedString(urlDocumentazione)).append("\n");
    sb.append("    motivoRevisionePrezzi: ").append(toIndentedString(motivoRevisionePrezzi)).append("\n");
    sb.append("    cigNuovaProcedura: ").append(toIndentedString(cigNuovaProcedura)).append("\n");
    sb.append("    quadroEconomicoConcessioniRideterminato: ").append(toIndentedString(quadroEconomicoConcessioniRideterminato)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
