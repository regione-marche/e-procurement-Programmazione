/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.CPVEnum;
import it.appaltiecontratti.pcp.v102.comunicaAppalto.TipoClassificazioneEnum;
import java.util.ArrayList;
import java.util.List;
/**
 * Dato in comune con il Business Group Classification delle eforms
 */
@Schema(description = "Dato in comune con il Business Group Classification delle eforms")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:13:15.678079400+02:00[Europe/Berlin]")

public class DatiBaseCPVType {
  @JsonProperty("tipoClassificazione")
  private TipoClassificazioneEnum tipoClassificazione = null;

  @JsonProperty("cpvPrevalente")
  private CPVEnum cpvPrevalente = null;

  @JsonProperty("cpvSecondarie")
  private List<CPVEnum> cpvSecondarie = null;

  public DatiBaseCPVType tipoClassificazione(TipoClassificazioneEnum tipoClassificazione) {
    this.tipoClassificazione = tipoClassificazione;
    return this;
  }

   /**
   * Get tipoClassificazione
   * @return tipoClassificazione
  **/
  @Schema(required = true, description = "")
  public TipoClassificazioneEnum getTipoClassificazione() {
    return tipoClassificazione;
  }

  public void setTipoClassificazione(TipoClassificazioneEnum tipoClassificazione) {
    this.tipoClassificazione = tipoClassificazione;
  }

  public DatiBaseCPVType cpvPrevalente(CPVEnum cpvPrevalente) {
    this.cpvPrevalente = cpvPrevalente;
    return this;
  }

   /**
   * Get cpvPrevalente
   * @return cpvPrevalente
  **/
  @Schema(required = true, description = "")
  public CPVEnum getCpvPrevalente() {
    return cpvPrevalente;
  }

  public void setCpvPrevalente(CPVEnum cpvPrevalente) {
    this.cpvPrevalente = cpvPrevalente;
  }

  public DatiBaseCPVType cpvSecondarie(List<CPVEnum> cpvSecondarie) {
    this.cpvSecondarie = cpvSecondarie;
    return this;
  }

  public DatiBaseCPVType addCpvSecondarieItem(CPVEnum cpvSecondarieItem) {
    if (this.cpvSecondarie == null) {
      this.cpvSecondarie = new ArrayList<>();
    }
    this.cpvSecondarie.add(cpvSecondarieItem);
    return this;
  }

   /**
   * Codice classificazione supplementare che caratterizza anch&#x27;esso l&#x27;appalto - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-263 - Additional Classification Codes del TED
   * @return cpvSecondarie
  **/
  @Schema(description = "Codice classificazione supplementare che caratterizza anch'esso l'appalto - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-263 - Additional Classification Codes del TED")
  public List<CPVEnum> getCpvSecondarie() {
    return cpvSecondarie;
  }

  public void setCpvSecondarie(List<CPVEnum> cpvSecondarie) {
    this.cpvSecondarie = cpvSecondarie;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatiBaseCPVType datiBaseCPVType = (DatiBaseCPVType) o;
    return Objects.equals(this.tipoClassificazione, datiBaseCPVType.tipoClassificazione) &&
        Objects.equals(this.cpvPrevalente, datiBaseCPVType.cpvPrevalente) &&
        Objects.equals(this.cpvSecondarie, datiBaseCPVType.cpvSecondarie);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tipoClassificazione, cpvPrevalente, cpvSecondarie);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatiBaseCPVType {\n");
    
    sb.append("    tipoClassificazione: ").append(toIndentedString(tipoClassificazione)).append("\n");
    sb.append("    cpvPrevalente: ").append(toIndentedString(cpvPrevalente)).append("\n");
    sb.append("    cpvSecondarie: ").append(toIndentedString(cpvSecondarie)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
