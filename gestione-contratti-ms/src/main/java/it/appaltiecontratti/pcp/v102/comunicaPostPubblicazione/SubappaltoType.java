/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.CPVEnum;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.CategoriaEnum;
import it.appaltiecontratti.pcp.v102.comunicaPostPubblicazione.MultilinguaType;
import java.util.ArrayList;
import java.util.List;
/**
 * Dati relativi ai subappalti
 */
@Schema(description = "Dati relativi ai subappalti")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-23T10:12:50.940473900+02:00[Europe/Berlin]")

public class SubappaltoType {
  @JsonProperty("codiciFiscaliOE")
  private List<String> codiciFiscaliOE = new ArrayList<>();

  @JsonProperty("impresaEstera")
  private Boolean impresaEstera = null;

  @JsonProperty("codiceFiscaleAggiudicatario")
  private String codiceFiscaleAggiudicatario = null;

  @JsonProperty("codiceFiscaleDittaACascata")
  private String codiceFiscaleDittaACascata = null;

  @JsonProperty("oggetto")
  private String oggetto = null;

  @JsonProperty("oggettoMl")
  private MultilinguaType oggettoMl = null;

  @JsonProperty("importoPresunto")
  private Double importoPresunto = null;

  @JsonProperty("categoria")
  private CategoriaEnum categoria = null;

  @JsonProperty("categoriaScorporabile")
  private List<CategoriaEnum> categoriaScorporabile = null;

  @JsonProperty("cpv")
  private List<CPVEnum> cpv = new ArrayList<>();

  public SubappaltoType codiciFiscaliOE(List<String> codiciFiscaliOE) {
    this.codiciFiscaliOE = codiciFiscaliOE;
    return this;
  }

  public SubappaltoType addCodiciFiscaliOEItem(String codiciFiscaliOEItem) {
    this.codiciFiscaliOE.add(codiciFiscaliOEItem);
    return this;
  }

   /**
   * Codici fiscali operatori economici
   * @return codiciFiscaliOE
  **/
  @Schema(required = true, description = "Codici fiscali operatori economici")
  public List<String> getCodiciFiscaliOE() {
    return codiciFiscaliOE;
  }

  public void setCodiciFiscaliOE(List<String> codiciFiscaliOE) {
    this.codiciFiscaliOE = codiciFiscaliOE;
  }

  public SubappaltoType impresaEstera(Boolean impresaEstera) {
    this.impresaEstera = impresaEstera;
    return this;
  }

   /**
   * Impresa estera?
   * @return impresaEstera
  **/
  @Schema(required = true, description = "Impresa estera?")
  public Boolean isImpresaEstera() {
    return impresaEstera;
  }

  public void setImpresaEstera(Boolean impresaEstera) {
    this.impresaEstera = impresaEstera;
  }

  public SubappaltoType codiceFiscaleAggiudicatario(String codiceFiscaleAggiudicatario) {
    this.codiceFiscaleAggiudicatario = codiceFiscaleAggiudicatario;
    return this;
  }

   /**
   * Codice fiscale ditta aggiudicatrice nel caso di aggiudicatari multipli
   * @return codiceFiscaleAggiudicatario
  **/
  @Schema(description = "Codice fiscale ditta aggiudicatrice nel caso di aggiudicatari multipli")
  public String getCodiceFiscaleAggiudicatario() {
    return codiceFiscaleAggiudicatario;
  }

  public void setCodiceFiscaleAggiudicatario(String codiceFiscaleAggiudicatario) {
    this.codiceFiscaleAggiudicatario = codiceFiscaleAggiudicatario;
  }

  public SubappaltoType codiceFiscaleDittaACascata(String codiceFiscaleDittaACascata) {
    this.codiceFiscaleDittaACascata = codiceFiscaleDittaACascata;
    return this;
  }

   /**
   * Codice fiscale ditta subappaltatrice
   * @return codiceFiscaleDittaACascata
  **/
  @Schema(description = "Codice fiscale ditta subappaltatrice")
  public String getCodiceFiscaleDittaACascata() {
    return codiceFiscaleDittaACascata;
  }

  public void setCodiceFiscaleDittaACascata(String codiceFiscaleDittaACascata) {
    this.codiceFiscaleDittaACascata = codiceFiscaleDittaACascata;
  }

  public SubappaltoType oggetto(String oggetto) {
    this.oggetto = oggetto;
    return this;
  }

   /**
   * Lavoro/Servizio/Fornitura subappalto
   * @return oggetto
  **/
  @Schema(description = "Lavoro/Servizio/Fornitura subappalto")
  public String getOggetto() {
    return oggetto;
  }

  public void setOggetto(String oggetto) {
    this.oggetto = oggetto;
  }

  public SubappaltoType oggettoMl(MultilinguaType oggettoMl) {
    this.oggettoMl = oggettoMl;
    return this;
  }

   /**
   * Get oggettoMl
   * @return oggettoMl
  **/
  @Schema(description = "")
  public MultilinguaType getOggettoMl() {
    return oggettoMl;
  }

  public void setOggettoMl(MultilinguaType oggettoMl) {
    this.oggettoMl = oggettoMl;
  }

  public SubappaltoType importoPresunto(Double importoPresunto) {
    this.importoPresunto = importoPresunto;
    return this;
  }

   /**
   * Importo presunto Lavoro/ Servizio/Fornitura, subappalto
   * @return importoPresunto
  **/
  @Schema(required = true, description = "Importo presunto Lavoro/ Servizio/Fornitura, subappalto")
  public Double getImportoPresunto() {
    return importoPresunto;
  }

  public void setImportoPresunto(Double importoPresunto) {
    this.importoPresunto = importoPresunto;
  }

  public SubappaltoType categoria(CategoriaEnum categoria) {
    this.categoria = categoria;
    return this;
  }

   /**
   * Get categoria
   * @return categoria
  **/
  @Schema(required = true, description = "")
  public CategoriaEnum getCategoria() {
    return categoria;
  }

  public void setCategoria(CategoriaEnum categoria) {
    this.categoria = categoria;
  }

  public SubappaltoType categoriaScorporabile(List<CategoriaEnum> categoriaScorporabile) {
    this.categoriaScorporabile = categoriaScorporabile;
    return this;
  }

  public SubappaltoType addCategoriaScorporabileItem(CategoriaEnum categoriaScorporabileItem) {
    if (this.categoriaScorporabile == null) {
      this.categoriaScorporabile = new ArrayList<>();
    }
    this.categoriaScorporabile.add(categoriaScorporabileItem);
    return this;
  }

   /**
   * Get categoriaScorporabile
   * @return categoriaScorporabile
  **/
  @Schema(description = "")
  public List<CategoriaEnum> getCategoriaScorporabile() {
    return categoriaScorporabile;
  }

  public void setCategoriaScorporabile(List<CategoriaEnum> categoriaScorporabile) {
    this.categoriaScorporabile = categoriaScorporabile;
  }

  public SubappaltoType cpv(List<CPVEnum> cpv) {
    this.cpv = cpv;
    return this;
  }

  public SubappaltoType addCpvItem(CPVEnum cpvItem) {
    this.cpv.add(cpvItem);
    return this;
  }

   /**
   * Get cpv
   * @return cpv
  **/
  @Schema(required = true, description = "")
  public List<CPVEnum> getCpv() {
    return cpv;
  }

  public void setCpv(List<CPVEnum> cpv) {
    this.cpv = cpv;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubappaltoType subappaltoType = (SubappaltoType) o;
    return Objects.equals(this.codiciFiscaliOE, subappaltoType.codiciFiscaliOE) &&
        Objects.equals(this.impresaEstera, subappaltoType.impresaEstera) &&
        Objects.equals(this.codiceFiscaleAggiudicatario, subappaltoType.codiceFiscaleAggiudicatario) &&
        Objects.equals(this.codiceFiscaleDittaACascata, subappaltoType.codiceFiscaleDittaACascata) &&
        Objects.equals(this.oggetto, subappaltoType.oggetto) &&
        Objects.equals(this.oggettoMl, subappaltoType.oggettoMl) &&
        Objects.equals(this.importoPresunto, subappaltoType.importoPresunto) &&
        Objects.equals(this.categoria, subappaltoType.categoria) &&
        Objects.equals(this.categoriaScorporabile, subappaltoType.categoriaScorporabile) &&
        Objects.equals(this.cpv, subappaltoType.cpv);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codiciFiscaliOE, impresaEstera, codiceFiscaleAggiudicatario, codiceFiscaleDittaACascata, oggetto, oggettoMl, importoPresunto, categoria, categoriaScorporabile, cpv);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubappaltoType {\n");
    
    sb.append("    codiciFiscaliOE: ").append(toIndentedString(codiciFiscaliOE)).append("\n");
    sb.append("    impresaEstera: ").append(toIndentedString(impresaEstera)).append("\n");
    sb.append("    codiceFiscaleAggiudicatario: ").append(toIndentedString(codiceFiscaleAggiudicatario)).append("\n");
    sb.append("    codiceFiscaleDittaACascata: ").append(toIndentedString(codiceFiscaleDittaACascata)).append("\n");
    sb.append("    oggetto: ").append(toIndentedString(oggetto)).append("\n");
    sb.append("    oggettoMl: ").append(toIndentedString(oggettoMl)).append("\n");
    sb.append("    importoPresunto: ").append(toIndentedString(importoPresunto)).append("\n");
    sb.append("    categoria: ").append(toIndentedString(categoria)).append("\n");
    sb.append("    categoriaScorporabile: ").append(toIndentedString(categoriaScorporabile)).append("\n");
    sb.append("    cpv: ").append(toIndentedString(cpv)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
