/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
/**
 * Dato in comune con il Business Group Submission Terms delle eforms
 */
@Schema(description = "Dato in comune con il Business Group Submission Terms delle eforms")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:50.369647700+02:00[Europe/Rome]")

public class DatiBaseTerminiInvioSoloScadenzaType {
  @JsonProperty("scadenzaPresentazioneInvito")
  private OffsetDateTime scadenzaPresentazioneInvito = null;

  public DatiBaseTerminiInvioSoloScadenzaType scadenzaPresentazioneInvito(OffsetDateTime scadenzaPresentazioneInvito) {
    this.scadenzaPresentazioneInvito = scadenzaPresentazioneInvito;
    return this;
  }

   /**
   * Data di scadenza per la presentazione della richiesta di invito - nei casi in cui la scheda preveda un eform, corrisponde ai campi bt-630 - Deadline Receipt Expressions e bt-1311 - Deadline Receipt Requests del TED
   * @return scadenzaPresentazioneInvito
  **/
  @Schema(required = true, description = "Data di scadenza per la presentazione della richiesta di invito - nei casi in cui la scheda preveda un eform, corrisponde ai campi bt-630 - Deadline Receipt Expressions e bt-1311 - Deadline Receipt Requests del TED")
  public OffsetDateTime getScadenzaPresentazioneInvito() {
    return scadenzaPresentazioneInvito;
  }

  public void setScadenzaPresentazioneInvito(OffsetDateTime scadenzaPresentazioneInvito) {
    this.scadenzaPresentazioneInvito = scadenzaPresentazioneInvito;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatiBaseTerminiInvioSoloScadenzaType datiBaseTerminiInvioSoloScadenzaType = (DatiBaseTerminiInvioSoloScadenzaType) o;
    return Objects.equals(this.scadenzaPresentazioneInvito, datiBaseTerminiInvioSoloScadenzaType.scadenzaPresentazioneInvito);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scadenzaPresentazioneInvito);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatiBaseTerminiInvioSoloScadenzaType {\n");
    
    sb.append("    scadenzaPresentazioneInvito: ").append(toIndentedString(scadenzaPresentazioneInvito)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
