/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.LingueEnum;
import java.util.ArrayList;
import java.util.List;
/**
 * Dato in comune con il Business Group Procurement Documents delle eforms
 */
@Schema(description = "Dato in comune con il Business Group Procurement Documents delle eforms")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:50.369647700+02:00[Europe/Rome]")

public class DatiBaseDocumentiType {
  @JsonProperty("url")
  private String url = null;

  @JsonProperty("lingue")
  private List<LingueEnum> lingue = null;

  public DatiBaseDocumentiType url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Indirizzo dei documenti di gara - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-15 - Documents Lot Identifier del TED
   * @return url
  **/
  @Schema(required = true, description = "Indirizzo dei documenti di gara - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-15 - Documents Lot Identifier del TED")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public DatiBaseDocumentiType lingue(List<LingueEnum> lingue) {
    this.lingue = lingue;
    return this;
  }

  public DatiBaseDocumentiType addLingueItem(LingueEnum lingueItem) {
    if (this.lingue == null) {
      this.lingue = new ArrayList<>();
    }
    this.lingue.add(lingueItem);
    return this;
  }

   /**
   * Get lingue
   * @return lingue
  **/
  @Schema(description = "")
  public List<LingueEnum> getLingue() {
    return lingue;
  }

  public void setLingue(List<LingueEnum> lingue) {
    this.lingue = lingue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatiBaseDocumentiType datiBaseDocumentiType = (DatiBaseDocumentiType) o;
    return Objects.equals(this.url, datiBaseDocumentiType.url) &&
        Objects.equals(this.lingue, datiBaseDocumentiType.lingue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, lingue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatiBaseDocumentiType {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    lingue: ").append(toIndentedString(lingue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
