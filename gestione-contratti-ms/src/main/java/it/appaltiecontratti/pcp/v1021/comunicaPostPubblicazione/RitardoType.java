/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.MultilinguaType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.TipologiaComunicazioneEnum;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
/**
 * Oggetto che riporta tutti i dati dell&#x27;istanza di recesso
 */
@Schema(description = "Oggetto che riporta tutti i dati dell'istanza di recesso")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:29.128631100+02:00[Europe/Rome]")

public class RitardoType {
  @JsonProperty("dataTermine")
  private OffsetDateTime dataTermine = null;

  @JsonProperty("tipoComunicazione")
  private TipologiaComunicazioneEnum tipoComunicazione = null;

  @JsonProperty("durataSospensione")
  private BigDecimal durataSospensione = null;

  @JsonProperty("motivoSospensione")
  private String motivoSospensione = null;

  @JsonProperty("motivoSospensioneMl")
  private MultilinguaType motivoSospensioneMl = null;

  @JsonProperty("dataIstanzaRecesso")
  private OffsetDateTime dataIstanzaRecesso = null;

  @JsonProperty("istanzaAccolta")
  private Boolean istanzaAccolta = null;

  @JsonProperty("istanzaTardiva")
  private Boolean istanzaTardiva = null;

  @JsonProperty("istanzaRipresa")
  private Boolean istanzaRipresa = null;

  @JsonProperty("istanzaRiserva")
  private Boolean istanzaRiserva = null;

  @JsonProperty("impSpese")
  private Double impSpese = null;

  @JsonProperty("impOneri")
  private Double impOneri = null;

  public RitardoType dataTermine(OffsetDateTime dataTermine) {
    this.dataTermine = dataTermine;
    return this;
  }

   /**
   * Termine previsto per la consegna
   * @return dataTermine
  **/
  @Schema(required = true, description = "Termine previsto per la consegna")
  public OffsetDateTime getDataTermine() {
    return dataTermine;
  }

  public void setDataTermine(OffsetDateTime dataTermine) {
    this.dataTermine = dataTermine;
  }

  public RitardoType tipoComunicazione(TipologiaComunicazioneEnum tipoComunicazione) {
    this.tipoComunicazione = tipoComunicazione;
    return this;
  }

   /**
   * Get tipoComunicazione
   * @return tipoComunicazione
  **/
  @Schema(required = true, description = "")
  public TipologiaComunicazioneEnum getTipoComunicazione() {
    return tipoComunicazione;
  }

  public void setTipoComunicazione(TipologiaComunicazioneEnum tipoComunicazione) {
    this.tipoComunicazione = tipoComunicazione;
  }

  public RitardoType durataSospensione(BigDecimal durataSospensione) {
    this.durataSospensione = durataSospensione;
    return this;
  }

   /**
   * Durata della sospensione in giorni (in caso di sospensione)
   * @return durataSospensione
  **/
  @Schema(description = "Durata della sospensione in giorni (in caso di sospensione)")
  public BigDecimal getDurataSospensione() {
    return durataSospensione;
  }

  public void setDurataSospensione(BigDecimal durataSospensione) {
    this.durataSospensione = durataSospensione;
  }

  public RitardoType motivoSospensione(String motivoSospensione) {
    this.motivoSospensione = motivoSospensione;
    return this;
  }

   /**
   * Motivazione della sospensione/ritardo
   * @return motivoSospensione
  **/
  @Schema(description = "Motivazione della sospensione/ritardo")
  public String getMotivoSospensione() {
    return motivoSospensione;
  }

  public void setMotivoSospensione(String motivoSospensione) {
    this.motivoSospensione = motivoSospensione;
  }

  public RitardoType motivoSospensioneMl(MultilinguaType motivoSospensioneMl) {
    this.motivoSospensioneMl = motivoSospensioneMl;
    return this;
  }

   /**
   * Get motivoSospensioneMl
   * @return motivoSospensioneMl
  **/
  @Schema(description = "")
  public MultilinguaType getMotivoSospensioneMl() {
    return motivoSospensioneMl;
  }

  public void setMotivoSospensioneMl(MultilinguaType motivoSospensioneMl) {
    this.motivoSospensioneMl = motivoSospensioneMl;
  }

  public RitardoType dataIstanzaRecesso(OffsetDateTime dataIstanzaRecesso) {
    this.dataIstanzaRecesso = dataIstanzaRecesso;
    return this;
  }

   /**
   * Data di presentazione dell’istanza di recesso
   * @return dataIstanzaRecesso
  **/
  @Schema(required = true, description = "Data di presentazione dell’istanza di recesso")
  public OffsetDateTime getDataIstanzaRecesso() {
    return dataIstanzaRecesso;
  }

  public void setDataIstanzaRecesso(OffsetDateTime dataIstanzaRecesso) {
    this.dataIstanzaRecesso = dataIstanzaRecesso;
  }

  public RitardoType istanzaAccolta(Boolean istanzaAccolta) {
    this.istanzaAccolta = istanzaAccolta;
    return this;
  }

   /**
   * L&#x27;istanza di recesso è stata accolta?
   * @return istanzaAccolta
  **/
  @Schema(required = true, description = "L'istanza di recesso è stata accolta?")
  public Boolean isIstanzaAccolta() {
    return istanzaAccolta;
  }

  public void setIstanzaAccolta(Boolean istanzaAccolta) {
    this.istanzaAccolta = istanzaAccolta;
  }

  public RitardoType istanzaTardiva(Boolean istanzaTardiva) {
    this.istanzaTardiva = istanzaTardiva;
    return this;
  }

   /**
   * Si è proceduto a consegna tardiva (in caso di ritardo)
   * @return istanzaTardiva
  **/
  @Schema(required = true, description = "Si è proceduto a consegna tardiva (in caso di ritardo)")
  public Boolean isIstanzaTardiva() {
    return istanzaTardiva;
  }

  public void setIstanzaTardiva(Boolean istanzaTardiva) {
    this.istanzaTardiva = istanzaTardiva;
  }

  public RitardoType istanzaRipresa(Boolean istanzaRipresa) {
    this.istanzaRipresa = istanzaRipresa;
    return this;
  }

   /**
   * Si è proceduto alla ripresa dei lavori (in caso di sospensione)
   * @return istanzaRipresa
  **/
  @Schema(required = true, description = "Si è proceduto alla ripresa dei lavori (in caso di sospensione)")
  public Boolean isIstanzaRipresa() {
    return istanzaRipresa;
  }

  public void setIstanzaRipresa(Boolean istanzaRipresa) {
    this.istanzaRipresa = istanzaRipresa;
  }

  public RitardoType istanzaRiserva(Boolean istanzaRiserva) {
    this.istanzaRiserva = istanzaRiserva;
    return this;
  }

   /**
   * L’appaltatore ha formulato riserve
   * @return istanzaRiserva
  **/
  @Schema(required = true, description = "L’appaltatore ha formulato riserve")
  public Boolean isIstanzaRiserva() {
    return istanzaRiserva;
  }

  public void setIstanzaRiserva(Boolean istanzaRiserva) {
    this.istanzaRiserva = istanzaRiserva;
  }

  public RitardoType impSpese(Double impSpese) {
    this.impSpese = impSpese;
    return this;
  }

   /**
   * Eventuale rimborso delle spese in €
   * @return impSpese
  **/
  @Schema(required = true, description = "Eventuale rimborso delle spese in €")
  public Double getImpSpese() {
    return impSpese;
  }

  public void setImpSpese(Double impSpese) {
    this.impSpese = impSpese;
  }

  public RitardoType impOneri(Double impOneri) {
    this.impOneri = impOneri;
    return this;
  }

   /**
   * Eventuale compenso degli oneri derivanti dal ritardo in €
   * @return impOneri
  **/
  @Schema(description = "Eventuale compenso degli oneri derivanti dal ritardo in €")
  public Double getImpOneri() {
    return impOneri;
  }

  public void setImpOneri(Double impOneri) {
    this.impOneri = impOneri;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RitardoType ritardoType = (RitardoType) o;
    return Objects.equals(this.dataTermine, ritardoType.dataTermine) &&
        Objects.equals(this.tipoComunicazione, ritardoType.tipoComunicazione) &&
        Objects.equals(this.durataSospensione, ritardoType.durataSospensione) &&
        Objects.equals(this.motivoSospensione, ritardoType.motivoSospensione) &&
        Objects.equals(this.motivoSospensioneMl, ritardoType.motivoSospensioneMl) &&
        Objects.equals(this.dataIstanzaRecesso, ritardoType.dataIstanzaRecesso) &&
        Objects.equals(this.istanzaAccolta, ritardoType.istanzaAccolta) &&
        Objects.equals(this.istanzaTardiva, ritardoType.istanzaTardiva) &&
        Objects.equals(this.istanzaRipresa, ritardoType.istanzaRipresa) &&
        Objects.equals(this.istanzaRiserva, ritardoType.istanzaRiserva) &&
        Objects.equals(this.impSpese, ritardoType.impSpese) &&
        Objects.equals(this.impOneri, ritardoType.impOneri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataTermine, tipoComunicazione, durataSospensione, motivoSospensione, motivoSospensioneMl, dataIstanzaRecesso, istanzaAccolta, istanzaTardiva, istanzaRipresa, istanzaRiserva, impSpese, impOneri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RitardoType {\n");
    
    sb.append("    dataTermine: ").append(toIndentedString(dataTermine)).append("\n");
    sb.append("    tipoComunicazione: ").append(toIndentedString(tipoComunicazione)).append("\n");
    sb.append("    durataSospensione: ").append(toIndentedString(durataSospensione)).append("\n");
    sb.append("    motivoSospensione: ").append(toIndentedString(motivoSospensione)).append("\n");
    sb.append("    motivoSospensioneMl: ").append(toIndentedString(motivoSospensioneMl)).append("\n");
    sb.append("    dataIstanzaRecesso: ").append(toIndentedString(dataIstanzaRecesso)).append("\n");
    sb.append("    istanzaAccolta: ").append(toIndentedString(istanzaAccolta)).append("\n");
    sb.append("    istanzaTardiva: ").append(toIndentedString(istanzaTardiva)).append("\n");
    sb.append("    istanzaRipresa: ").append(toIndentedString(istanzaRipresa)).append("\n");
    sb.append("    istanzaRiserva: ").append(toIndentedString(istanzaRiserva)).append("\n");
    sb.append("    impSpese: ").append(toIndentedString(impSpese)).append("\n");
    sb.append("    impOneri: ").append(toIndentedString(impOneri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
