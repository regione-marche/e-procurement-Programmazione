/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.AccessibilitaEnum;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.MultilinguaType;
/**
 * Deprecato. Dato in comune con il Business Group Strategic Procurement delle eforms
 */
@Schema(description = "Deprecato. Dato in comune con il Business Group Strategic Procurement delle eforms")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-02-25T11:43:52.162087800+01:00[Europe/Rome]")

public class DatiBaseAccessibilitaA7Type {
  @JsonProperty("accessibilita")
  private AccessibilitaEnum accessibilita = null;

  @JsonProperty("giustificazione")
  private String giustificazione = null;

  @JsonProperty("giustificazioneMl")
  private MultilinguaType giustificazioneMl = null;

  public DatiBaseAccessibilitaA7Type accessibilita(AccessibilitaEnum accessibilita) {
    this.accessibilita = accessibilita;
    return this;
  }

   /**
   * Get accessibilita
   * @return accessibilita
  **/
  @Schema(description = "")
  public AccessibilitaEnum getAccessibilita() {
    return accessibilita;
  }

  public void setAccessibilita(AccessibilitaEnum accessibilita) {
    this.accessibilita = accessibilita;
  }

  public DatiBaseAccessibilitaA7Type giustificazione(String giustificazione) {
    this.giustificazione = giustificazione;
    return this;
  }

   /**
   * giustificazione
   * @return giustificazione
  **/
  @Schema(description = "giustificazione")
  public String getGiustificazione() {
    return giustificazione;
  }

  public void setGiustificazione(String giustificazione) {
    this.giustificazione = giustificazione;
  }

  public DatiBaseAccessibilitaA7Type giustificazioneMl(MultilinguaType giustificazioneMl) {
    this.giustificazioneMl = giustificazioneMl;
    return this;
  }

   /**
   * Get giustificazioneMl
   * @return giustificazioneMl
  **/
  @Schema(description = "")
  public MultilinguaType getGiustificazioneMl() {
    return giustificazioneMl;
  }

  public void setGiustificazioneMl(MultilinguaType giustificazioneMl) {
    this.giustificazioneMl = giustificazioneMl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatiBaseAccessibilitaA7Type datiBaseAccessibilitaA7Type = (DatiBaseAccessibilitaA7Type) o;
    return Objects.equals(this.accessibilita, datiBaseAccessibilitaA7Type.accessibilita) &&
        Objects.equals(this.giustificazione, datiBaseAccessibilitaA7Type.giustificazione) &&
        Objects.equals(this.giustificazioneMl, datiBaseAccessibilitaA7Type.giustificazioneMl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessibilita, giustificazione, giustificazioneMl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatiBaseAccessibilitaA7Type {\n");
    
    sb.append("    accessibilita: ").append(toIndentedString(accessibilita)).append("\n");
    sb.append("    giustificazione: ").append(toIndentedString(giustificazione)).append("\n");
    sb.append("    giustificazioneMl: ").append(toIndentedString(giustificazioneMl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
