/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.MisurePremialiEnum;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.MotivoDerogaEnum;
import java.util.ArrayList;
import java.util.List;
/**
 * Deprecato. Previsione nel bando di gara, nell’avviso o nell’invito, dell’obbligo di assicurare, in caso di aggiudicazione del contratto, una quota pari almeno al 30 per cento, delle assunzioni necessarie per l&#x27;esecuzione del contratto o per la realizzazione di attività ad esso connesse o strumentali, sia all&#x27;occupazione giovanile sia all&#x27;occupazione femminile (articolo 47, comma 4, D.L. 77/2021)?
 */
@Schema(description = "Deprecato. Previsione nel bando di gara, nell’avviso o nell’invito, dell’obbligo di assicurare, in caso di aggiudicazione del contratto, una quota pari almeno al 30 per cento, delle assunzioni necessarie per l'esecuzione del contratto o per la realizzazione di attività ad esso connesse o strumentali, sia all'occupazione giovanile sia all'occupazione femminile (articolo 47, comma 4, D.L. 77/2021)?")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-02-25T11:43:52.162087800+01:00[Europe/Rome]")

public class ParitaDiGenereGenerazionaleA7Type {
  @JsonProperty("derogaAQ")
  private Boolean derogaAQ = null;

  /**
   * Previsione nel bando di gara, nell’avviso o nell’invito, dell’obbligo di assicurare, in caso di aggiudicazione del contratto, una quota pari almeno al 30 per cento, delle assunzioni necessarie per l&#x27;esecuzione del contratto o per la realizzazione di attività ad esso connesse o strumentali, sia all&#x27;occupazione giovanile sia all&#x27;occupazione femminile (articolo 47, comma 4, D.L. 77/2021)? Valori ammessi - SI/NO/SI_QUOTA_INFERIORE
   */
  public enum Quota30PerCentoEnum {
    SI("SI"),
    NO("NO"),
    SI_QUOTA_INFERIORE("SI_QUOTA_INFERIORE");

    private String value;

    Quota30PerCentoEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static Quota30PerCentoEnum fromValue(String input) {
      for (Quota30PerCentoEnum b : Quota30PerCentoEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("quota30PerCento")
  private Quota30PerCentoEnum quota30PerCento = null;

  @JsonProperty("quotaInferioreOccupFemminile")
  private Double quotaInferioreOccupFemminile = null;

  @JsonProperty("quotaInferioreOccupGiovanile")
  private Double quotaInferioreOccupGiovanile = null;

  @JsonProperty("motivoDeroga")
  private List<MotivoDerogaEnum> motivoDeroga = null;

  @JsonProperty("ulterioriMisurePremiali")
  private Boolean ulterioriMisurePremiali = null;

  @JsonProperty("misurePremiali")
  private List<MisurePremialiEnum> misurePremiali = null;

  public ParitaDiGenereGenerazionaleA7Type derogaAQ(Boolean derogaAQ) {
    this.derogaAQ = derogaAQ;
    return this;
  }

   /**
   * Deroga per adesione ad AQ/Convenzione precedente alle linee guida DPO sull’articolo 47 del DL 77/2021 e ss.m.i.?
   * @return derogaAQ
  **/
  @Schema(description = "Deroga per adesione ad AQ/Convenzione precedente alle linee guida DPO sull’articolo 47 del DL 77/2021 e ss.m.i.?")
  public Boolean isDerogaAQ() {
    return derogaAQ;
  }

  public void setDerogaAQ(Boolean derogaAQ) {
    this.derogaAQ = derogaAQ;
  }

  public ParitaDiGenereGenerazionaleA7Type quota30PerCento(Quota30PerCentoEnum quota30PerCento) {
    this.quota30PerCento = quota30PerCento;
    return this;
  }

   /**
   * Previsione nel bando di gara, nell’avviso o nell’invito, dell’obbligo di assicurare, in caso di aggiudicazione del contratto, una quota pari almeno al 30 per cento, delle assunzioni necessarie per l&#x27;esecuzione del contratto o per la realizzazione di attività ad esso connesse o strumentali, sia all&#x27;occupazione giovanile sia all&#x27;occupazione femminile (articolo 47, comma 4, D.L. 77/2021)? Valori ammessi - SI/NO/SI_QUOTA_INFERIORE
   * @return quota30PerCento
  **/
  @Schema(description = "Previsione nel bando di gara, nell’avviso o nell’invito, dell’obbligo di assicurare, in caso di aggiudicazione del contratto, una quota pari almeno al 30 per cento, delle assunzioni necessarie per l'esecuzione del contratto o per la realizzazione di attività ad esso connesse o strumentali, sia all'occupazione giovanile sia all'occupazione femminile (articolo 47, comma 4, D.L. 77/2021)? Valori ammessi - SI/NO/SI_QUOTA_INFERIORE")
  public Quota30PerCentoEnum getQuota30PerCento() {
    return quota30PerCento;
  }

  public void setQuota30PerCento(Quota30PerCentoEnum quota30PerCento) {
    this.quota30PerCento = quota30PerCento;
  }

  public ParitaDiGenereGenerazionaleA7Type quotaInferioreOccupFemminile(Double quotaInferioreOccupFemminile) {
    this.quotaInferioreOccupFemminile = quotaInferioreOccupFemminile;
    return this;
  }

   /**
   * Previsione di una quota inferiore con riferimento all’occupazione femminile
   * minimum: 0
   * maximum: 100
   * @return quotaInferioreOccupFemminile
  **/
  @Schema(description = "Previsione di una quota inferiore con riferimento all’occupazione femminile")
  public Double getQuotaInferioreOccupFemminile() {
    return quotaInferioreOccupFemminile;
  }

  public void setQuotaInferioreOccupFemminile(Double quotaInferioreOccupFemminile) {
    this.quotaInferioreOccupFemminile = quotaInferioreOccupFemminile;
  }

  public ParitaDiGenereGenerazionaleA7Type quotaInferioreOccupGiovanile(Double quotaInferioreOccupGiovanile) {
    this.quotaInferioreOccupGiovanile = quotaInferioreOccupGiovanile;
    return this;
  }

   /**
   * Previsione di una quota inferiore con riferimento all’occupazione giovanile
   * minimum: 0
   * maximum: 100
   * @return quotaInferioreOccupGiovanile
  **/
  @Schema(description = "Previsione di una quota inferiore con riferimento all’occupazione giovanile")
  public Double getQuotaInferioreOccupGiovanile() {
    return quotaInferioreOccupGiovanile;
  }

  public void setQuotaInferioreOccupGiovanile(Double quotaInferioreOccupGiovanile) {
    this.quotaInferioreOccupGiovanile = quotaInferioreOccupGiovanile;
  }

  public ParitaDiGenereGenerazionaleA7Type motivoDeroga(List<MotivoDerogaEnum> motivoDeroga) {
    this.motivoDeroga = motivoDeroga;
    return this;
  }

  public ParitaDiGenereGenerazionaleA7Type addMotivoDerogaItem(MotivoDerogaEnum motivoDerogaItem) {
    if (this.motivoDeroga == null) {
      this.motivoDeroga = new ArrayList<>();
    }
    this.motivoDeroga.add(motivoDerogaItem);
    return this;
  }

   /**
   * Get motivoDeroga
   * @return motivoDeroga
  **/
  @Schema(description = "")
  public List<MotivoDerogaEnum> getMotivoDeroga() {
    return motivoDeroga;
  }

  public void setMotivoDeroga(List<MotivoDerogaEnum> motivoDeroga) {
    this.motivoDeroga = motivoDeroga;
  }

  public ParitaDiGenereGenerazionaleA7Type ulterioriMisurePremiali(Boolean ulterioriMisurePremiali) {
    this.ulterioriMisurePremiali = ulterioriMisurePremiali;
    return this;
  }

   /**
   * Previsione nel bando di gara, nell’avviso o nell’invito di ulteriori misure premiali che attribuiscono un punteggio aggiuntivo all’offerente o al candidato.
   * @return ulterioriMisurePremiali
  **/
  @Schema(description = "Previsione nel bando di gara, nell’avviso o nell’invito di ulteriori misure premiali che attribuiscono un punteggio aggiuntivo all’offerente o al candidato.")
  public Boolean isUlterioriMisurePremiali() {
    return ulterioriMisurePremiali;
  }

  public void setUlterioriMisurePremiali(Boolean ulterioriMisurePremiali) {
    this.ulterioriMisurePremiali = ulterioriMisurePremiali;
  }

  public ParitaDiGenereGenerazionaleA7Type misurePremiali(List<MisurePremialiEnum> misurePremiali) {
    this.misurePremiali = misurePremiali;
    return this;
  }

  public ParitaDiGenereGenerazionaleA7Type addMisurePremialiItem(MisurePremialiEnum misurePremialiItem) {
    if (this.misurePremiali == null) {
      this.misurePremiali = new ArrayList<>();
    }
    this.misurePremiali.add(misurePremialiItem);
    return this;
  }

   /**
   * Get misurePremiali
   * @return misurePremiali
  **/
  @Schema(description = "")
  public List<MisurePremialiEnum> getMisurePremiali() {
    return misurePremiali;
  }

  public void setMisurePremiali(List<MisurePremialiEnum> misurePremiali) {
    this.misurePremiali = misurePremiali;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParitaDiGenereGenerazionaleA7Type paritaDiGenereGenerazionaleA7Type = (ParitaDiGenereGenerazionaleA7Type) o;
    return Objects.equals(this.derogaAQ, paritaDiGenereGenerazionaleA7Type.derogaAQ) &&
        Objects.equals(this.quota30PerCento, paritaDiGenereGenerazionaleA7Type.quota30PerCento) &&
        Objects.equals(this.quotaInferioreOccupFemminile, paritaDiGenereGenerazionaleA7Type.quotaInferioreOccupFemminile) &&
        Objects.equals(this.quotaInferioreOccupGiovanile, paritaDiGenereGenerazionaleA7Type.quotaInferioreOccupGiovanile) &&
        Objects.equals(this.motivoDeroga, paritaDiGenereGenerazionaleA7Type.motivoDeroga) &&
        Objects.equals(this.ulterioriMisurePremiali, paritaDiGenereGenerazionaleA7Type.ulterioriMisurePremiali) &&
        Objects.equals(this.misurePremiali, paritaDiGenereGenerazionaleA7Type.misurePremiali);
  }

  @Override
  public int hashCode() {
    return Objects.hash(derogaAQ, quota30PerCento, quotaInferioreOccupFemminile, quotaInferioreOccupGiovanile, motivoDeroga, ulterioriMisurePremiali, misurePremiali);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParitaDiGenereGenerazionaleA7Type {\n");
    
    sb.append("    derogaAQ: ").append(toIndentedString(derogaAQ)).append("\n");
    sb.append("    quota30PerCento: ").append(toIndentedString(quota30PerCento)).append("\n");
    sb.append("    quotaInferioreOccupFemminile: ").append(toIndentedString(quotaInferioreOccupFemminile)).append("\n");
    sb.append("    quotaInferioreOccupGiovanile: ").append(toIndentedString(quotaInferioreOccupGiovanile)).append("\n");
    sb.append("    motivoDeroga: ").append(toIndentedString(motivoDeroga)).append("\n");
    sb.append("    ulterioriMisurePremiali: ").append(toIndentedString(ulterioriMisurePremiali)).append("\n");
    sb.append("    misurePremiali: ").append(toIndentedString(misurePremiali)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
