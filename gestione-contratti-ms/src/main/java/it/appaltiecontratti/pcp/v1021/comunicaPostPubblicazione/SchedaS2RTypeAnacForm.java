/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.ElencoSoggettiType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.MotivoRichiestaRettificaEnum;
import java.util.ArrayList;
import java.util.List;
/**
 * SchedaS2RTypeAnacForm
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-02-25T11:43:52.162087800+01:00[Europe/Rome]")

public class SchedaS2RTypeAnacForm {
  @JsonProperty("motivoRichiestaRettifica")
  private MotivoRichiestaRettificaEnum motivoRichiestaRettifica = null;

  @JsonProperty("elencoSoggetti")
  private List<ElencoSoggettiType> elencoSoggetti = new ArrayList<>();

  public SchedaS2RTypeAnacForm motivoRichiestaRettifica(MotivoRichiestaRettificaEnum motivoRichiestaRettifica) {
    this.motivoRichiestaRettifica = motivoRichiestaRettifica;
    return this;
  }

   /**
   * Get motivoRichiestaRettifica
   * @return motivoRichiestaRettifica
  **/
  @Schema(required = true, description = "")
  public MotivoRichiestaRettificaEnum getMotivoRichiestaRettifica() {
    return motivoRichiestaRettifica;
  }

  public void setMotivoRichiestaRettifica(MotivoRichiestaRettificaEnum motivoRichiestaRettifica) {
    this.motivoRichiestaRettifica = motivoRichiestaRettifica;
  }

  public SchedaS2RTypeAnacForm elencoSoggetti(List<ElencoSoggettiType> elencoSoggetti) {
    this.elencoSoggetti = elencoSoggetti;
    return this;
  }

  public SchedaS2RTypeAnacForm addElencoSoggettiItem(ElencoSoggettiType elencoSoggettiItem) {
    this.elencoSoggetti.add(elencoSoggettiItem);
    return this;
  }

   /**
   * Get elencoSoggetti
   * @return elencoSoggetti
  **/
  @Schema(required = true, description = "")
  public List<ElencoSoggettiType> getElencoSoggetti() {
    return elencoSoggetti;
  }

  public void setElencoSoggetti(List<ElencoSoggettiType> elencoSoggetti) {
    this.elencoSoggetti = elencoSoggetti;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchedaS2RTypeAnacForm schedaS2RTypeAnacForm = (SchedaS2RTypeAnacForm) o;
    return Objects.equals(this.motivoRichiestaRettifica, schedaS2RTypeAnacForm.motivoRichiestaRettifica) &&
        Objects.equals(this.elencoSoggetti, schedaS2RTypeAnacForm.elencoSoggetti);
  }

  @Override
  public int hashCode() {
    return Objects.hash(motivoRichiestaRettifica, elencoSoggetti);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchedaS2RTypeAnacForm {\n");
    
    sb.append("    motivoRichiestaRettifica: ").append(toIndentedString(motivoRichiestaRettifica)).append("\n");
    sb.append("    elencoSoggetti: ").append(toIndentedString(elencoSoggetti)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
