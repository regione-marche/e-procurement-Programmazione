/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.AltraDurataEnum;
import java.time.OffsetDateTime;
/**
 * Dato in comune con il Business Group Duration delle eforms
 */
@Schema(description = "Dato in comune con il Business Group Duration delle eforms")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:50.369647700+02:00[Europe/Rome]")

public class DatiBaseDurataSDAType {
  @JsonProperty("dataInizio")
  private OffsetDateTime dataInizio = null;

  @JsonProperty("durata")
  private String durata = null;

  @JsonProperty("dataFine")
  private OffsetDateTime dataFine = null;

  @JsonProperty("altraDurata")
  private AltraDurataEnum altraDurata = null;

  public DatiBaseDurataSDAType dataInizio(OffsetDateTime dataInizio) {
    this.dataInizio = dataInizio;
    return this;
  }

   /**
   * La data (stimata) alla quale ha inizio l&#x27;appalto, l&#x27;accordo quadro, il sistema dinamico di acquisizione o il sistema di qualificazione. - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-536 - Duration Start Date del TED
   * @return dataInizio
  **/
  @Schema(required = true, description = "La data (stimata) alla quale ha inizio l'appalto, l'accordo quadro, il sistema dinamico di acquisizione o il sistema di qualificazione. - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-536 - Duration Start Date del TED")
  public OffsetDateTime getDataInizio() {
    return dataInizio;
  }

  public void setDataInizio(OffsetDateTime dataInizio) {
    this.dataInizio = dataInizio;
  }

  public DatiBaseDurataSDAType durata(String durata) {
    this.durata = durata;
    return this;
  }

   /**
   * Il periodo (stimato) che intercorre tra l&#x27;inizio e la fine dell&#x27;appalto, dell&#x27;accordo quadro, del sistema dinamico di acquisizione o del sistema di qualificazione. Sono compresi tutte le opzioni e tutti i rinnovi. - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-36 - Duration Period del TED
   * @return durata
  **/
  @Schema(description = "Il periodo (stimato) che intercorre tra l'inizio e la fine dell'appalto, dell'accordo quadro, del sistema dinamico di acquisizione o del sistema di qualificazione. Sono compresi tutte le opzioni e tutti i rinnovi. - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-36 - Duration Period del TED")
  public String getDurata() {
    return durata;
  }

  public void setDurata(String durata) {
    this.durata = durata;
  }

  public DatiBaseDurataSDAType dataFine(OffsetDateTime dataFine) {
    this.dataFine = dataFine;
    return this;
  }

   /**
   * La data (stimata) alla quale ha fine l&#x27;appalto, l&#x27;accordo quadro, il sistema dinamico di acquisizione o il sistema di qualificazione. - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-537 - Duration End Date del TED
   * @return dataFine
  **/
  @Schema(description = "La data (stimata) alla quale ha fine l'appalto, l'accordo quadro, il sistema dinamico di acquisizione o il sistema di qualificazione. - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-537 - Duration End Date del TED")
  public OffsetDateTime getDataFine() {
    return dataFine;
  }

  public void setDataFine(OffsetDateTime dataFine) {
    this.dataFine = dataFine;
  }

  public DatiBaseDurataSDAType altraDurata(AltraDurataEnum altraDurata) {
    this.altraDurata = altraDurata;
    return this;
  }

   /**
   * Get altraDurata
   * @return altraDurata
  **/
  @Schema(description = "")
  public AltraDurataEnum getAltraDurata() {
    return altraDurata;
  }

  public void setAltraDurata(AltraDurataEnum altraDurata) {
    this.altraDurata = altraDurata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatiBaseDurataSDAType datiBaseDurataSDAType = (DatiBaseDurataSDAType) o;
    return Objects.equals(this.dataInizio, datiBaseDurataSDAType.dataInizio) &&
        Objects.equals(this.durata, datiBaseDurataSDAType.durata) &&
        Objects.equals(this.dataFine, datiBaseDurataSDAType.dataFine) &&
        Objects.equals(this.altraDurata, datiBaseDurataSDAType.altraDurata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataInizio, durata, dataFine, altraDurata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatiBaseDurataSDAType {\n");
    
    sb.append("    dataInizio: ").append(toIndentedString(dataInizio)).append("\n");
    sb.append("    durata: ").append(toIndentedString(durata)).append("\n");
    sb.append("    dataFine: ").append(toIndentedString(dataFine)).append("\n");
    sb.append("    altraDurata: ").append(toIndentedString(altraDurata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
