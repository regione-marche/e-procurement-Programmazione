/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.FunzioniDelegateEnum;
import java.util.ArrayList;
import java.util.List;
/**
 * Stazione Appaltante e ruoli ricoperti nell&#x27;appalto
 */
@Schema(description = "Stazione Appaltante e ruoli ricoperti nell'appalto")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:50.369647700+02:00[Europe/Rome]")

public class StazioneAppaltanteType {
  @JsonProperty("codiceFiscale")
  private String codiceFiscale = null;

  @JsonProperty("codiceAusa")
  private String codiceAusa = null;

  @JsonProperty("codiceCentroCosto")
  private String codiceCentroCosto = null;

  @JsonProperty("funzioniSvolte")
  private List<FunzioniDelegateEnum> funzioniSvolte = null;

  @JsonProperty("saTitolare")
  private Boolean saTitolare = null;

  public StazioneAppaltanteType codiceFiscale(String codiceFiscale) {
    this.codiceFiscale = codiceFiscale;
    return this;
  }

   /**
   * Codice fiscale della S.A.
   * @return codiceFiscale
  **/
  @Schema(required = true, description = "Codice fiscale della S.A.")
  public String getCodiceFiscale() {
    return codiceFiscale;
  }

  public void setCodiceFiscale(String codiceFiscale) {
    this.codiceFiscale = codiceFiscale;
  }

  public StazioneAppaltanteType codiceAusa(String codiceAusa) {
    this.codiceAusa = codiceAusa;
    return this;
  }

   /**
   * Codice Ausa della S.A.
   * @return codiceAusa
  **/
  @Schema(required = true, description = "Codice Ausa della S.A.")
  public String getCodiceAusa() {
    return codiceAusa;
  }

  public void setCodiceAusa(String codiceAusa) {
    this.codiceAusa = codiceAusa;
  }

  public StazioneAppaltanteType codiceCentroCosto(String codiceCentroCosto) {
    this.codiceCentroCosto = codiceCentroCosto;
    return this;
  }

   /**
   * Codice del centro di costo
   * @return codiceCentroCosto
  **/
  @Schema(required = true, description = "Codice del centro di costo")
  public String getCodiceCentroCosto() {
    return codiceCentroCosto;
  }

  public void setCodiceCentroCosto(String codiceCentroCosto) {
    this.codiceCentroCosto = codiceCentroCosto;
  }

  public StazioneAppaltanteType funzioniSvolte(List<FunzioniDelegateEnum> funzioniSvolte) {
    this.funzioniSvolte = funzioniSvolte;
    return this;
  }

  public StazioneAppaltanteType addFunzioniSvolteItem(FunzioniDelegateEnum funzioniSvolteItem) {
    if (this.funzioniSvolte == null) {
      this.funzioniSvolte = new ArrayList<>();
    }
    this.funzioniSvolte.add(funzioniSvolteItem);
    return this;
  }

   /**
   * Get funzioniSvolte
   * @return funzioniSvolte
  **/
  @Schema(description = "")
  public List<FunzioniDelegateEnum> getFunzioniSvolte() {
    return funzioniSvolte;
  }

  public void setFunzioniSvolte(List<FunzioniDelegateEnum> funzioniSvolte) {
    this.funzioniSvolte = funzioniSvolte;
  }

  public StazioneAppaltanteType saTitolare(Boolean saTitolare) {
    this.saTitolare = saTitolare;
    return this;
  }

   /**
   * Stazione appaltante titolare
   * @return saTitolare
  **/
  @Schema(required = true, description = "Stazione appaltante titolare")
  public Boolean isSaTitolare() {
    return saTitolare;
  }

  public void setSaTitolare(Boolean saTitolare) {
    this.saTitolare = saTitolare;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StazioneAppaltanteType stazioneAppaltanteType = (StazioneAppaltanteType) o;
    return Objects.equals(this.codiceFiscale, stazioneAppaltanteType.codiceFiscale) &&
        Objects.equals(this.codiceAusa, stazioneAppaltanteType.codiceAusa) &&
        Objects.equals(this.codiceCentroCosto, stazioneAppaltanteType.codiceCentroCosto) &&
        Objects.equals(this.funzioniSvolte, stazioneAppaltanteType.funzioniSvolte) &&
        Objects.equals(this.saTitolare, stazioneAppaltanteType.saTitolare);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codiceFiscale, codiceAusa, codiceCentroCosto, funzioniSvolte, saTitolare);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StazioneAppaltanteType {\n");
    
    sb.append("    codiceFiscale: ").append(toIndentedString(codiceFiscale)).append("\n");
    sb.append("    codiceAusa: ").append(toIndentedString(codiceAusa)).append("\n");
    sb.append("    codiceCentroCosto: ").append(toIndentedString(codiceCentroCosto)).append("\n");
    sb.append("    funzioniSvolte: ").append(toIndentedString(funzioniSvolte)).append("\n");
    sb.append("    saTitolare: ").append(toIndentedString(saTitolare)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
