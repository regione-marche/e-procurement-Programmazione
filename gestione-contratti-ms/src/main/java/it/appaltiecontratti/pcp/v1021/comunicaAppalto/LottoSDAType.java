/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.DatiBaseContrattoType;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.DatiBaseDocumentiType;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.DatiBaseDurataSDAType;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.LottoISDABaseType;
/**
 * Oggetto che riporta i dati del lotto
 */
@Schema(description = "Oggetto che riporta i dati del lotto")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:50.369647700+02:00[Europe/Rome]")

public class LottoSDAType extends LottoISDABaseType {
  @JsonProperty("lotIdentifier")
  private String lottoSDATypeLotIdentifier = null;

  @JsonProperty("datiBase")
  private AllOfLottoSDATypeDatiBase datiBase = null;

  @JsonProperty("datiBaseCPV")
  private AllOfLottoSDATypeDatiBaseCPV datiBaseCPV = null;

  @JsonProperty("datiBaseContratto")
  private DatiBaseContrattoType datiBaseContratto = null;

  @JsonProperty("datiBaseDocumenti")
  private DatiBaseDocumentiType datiBaseDocumenti = null;

  @JsonProperty("datiBaseDurata")
  private DatiBaseDurataSDAType datiBaseDurata = null;

  public LottoSDAType lottoSDATypeLotIdentifier(String lottoSDATypeLotIdentifier) {
    this.lottoSDATypeLotIdentifier = lottoSDATypeLotIdentifier;
    return this;
  }

   /**
   * Id univoco del lotto generato dalla stazione appaltante
   * @return lottoSDATypeLotIdentifier
  **/
  @Schema(required = true, description = "Id univoco del lotto generato dalla stazione appaltante")
  public String getLottoSDATypeLotIdentifier() {
    return lottoSDATypeLotIdentifier;
  }

  public void setLottoSDATypeLotIdentifier(String lottoSDATypeLotIdentifier) {
    this.lottoSDATypeLotIdentifier = lottoSDATypeLotIdentifier;
  }

  public LottoSDAType datiBase(AllOfLottoSDATypeDatiBase datiBase) {
    this.datiBase = datiBase;
    return this;
  }

   /**
   * Get datiBase
   * @return datiBase
  **/
  @Schema(required = true, description = "")
  public AllOfLottoSDATypeDatiBase getDatiBase() {
    return datiBase;
  }

  public void setDatiBase(AllOfLottoSDATypeDatiBase datiBase) {
    this.datiBase = datiBase;
  }

  public LottoSDAType datiBaseCPV(AllOfLottoSDATypeDatiBaseCPV datiBaseCPV) {
    this.datiBaseCPV = datiBaseCPV;
    return this;
  }

   /**
   * Get datiBaseCPV
   * @return datiBaseCPV
  **/
  @Schema(required = true, description = "")
  public AllOfLottoSDATypeDatiBaseCPV getDatiBaseCPV() {
    return datiBaseCPV;
  }

  public void setDatiBaseCPV(AllOfLottoSDATypeDatiBaseCPV datiBaseCPV) {
    this.datiBaseCPV = datiBaseCPV;
  }

  public LottoSDAType datiBaseContratto(DatiBaseContrattoType datiBaseContratto) {
    this.datiBaseContratto = datiBaseContratto;
    return this;
  }

   /**
   * Get datiBaseContratto
   * @return datiBaseContratto
  **/
  @Schema(description = "")
  public DatiBaseContrattoType getDatiBaseContratto() {
    return datiBaseContratto;
  }

  public void setDatiBaseContratto(DatiBaseContrattoType datiBaseContratto) {
    this.datiBaseContratto = datiBaseContratto;
  }

  public LottoSDAType datiBaseDocumenti(DatiBaseDocumentiType datiBaseDocumenti) {
    this.datiBaseDocumenti = datiBaseDocumenti;
    return this;
  }

   /**
   * Get datiBaseDocumenti
   * @return datiBaseDocumenti
  **/
  @Schema(required = true, description = "")
  public DatiBaseDocumentiType getDatiBaseDocumenti() {
    return datiBaseDocumenti;
  }

  public void setDatiBaseDocumenti(DatiBaseDocumentiType datiBaseDocumenti) {
    this.datiBaseDocumenti = datiBaseDocumenti;
  }

  public LottoSDAType datiBaseDurata(DatiBaseDurataSDAType datiBaseDurata) {
    this.datiBaseDurata = datiBaseDurata;
    return this;
  }

   /**
   * Get datiBaseDurata
   * @return datiBaseDurata
  **/
  @Schema(required = true, description = "")
  public DatiBaseDurataSDAType getDatiBaseDurata() {
    return datiBaseDurata;
  }

  public void setDatiBaseDurata(DatiBaseDurataSDAType datiBaseDurata) {
    this.datiBaseDurata = datiBaseDurata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LottoSDAType lottoSDAType = (LottoSDAType) o;
    return Objects.equals(this.lottoSDATypeLotIdentifier, lottoSDAType.lottoSDATypeLotIdentifier) &&
        Objects.equals(this.datiBase, lottoSDAType.datiBase) &&
        Objects.equals(this.datiBaseCPV, lottoSDAType.datiBaseCPV) &&
        Objects.equals(this.datiBaseContratto, lottoSDAType.datiBaseContratto) &&
        Objects.equals(this.datiBaseDocumenti, lottoSDAType.datiBaseDocumenti) &&
        Objects.equals(this.datiBaseDurata, lottoSDAType.datiBaseDurata) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lottoSDATypeLotIdentifier, datiBase, datiBaseCPV, datiBaseContratto, datiBaseDocumenti, datiBaseDurata, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LottoSDAType {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    lottoSDATypeLotIdentifier: ").append(toIndentedString(lottoSDATypeLotIdentifier)).append("\n");
    sb.append("    datiBase: ").append(toIndentedString(datiBase)).append("\n");
    sb.append("    datiBaseCPV: ").append(toIndentedString(datiBaseCPV)).append("\n");
    sb.append("    datiBaseContratto: ").append(toIndentedString(datiBaseContratto)).append("\n");
    sb.append("    datiBaseDocumenti: ").append(toIndentedString(datiBaseDocumenti)).append("\n");
    sb.append("    datiBaseDurata: ").append(toIndentedString(datiBaseDurata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
