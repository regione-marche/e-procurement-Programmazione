/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.IncaricoType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.PrestazioneType;
import java.util.ArrayList;
import java.util.List;
/**
 * Dati relativi agli incarichi.
 */
@Schema(description = "Dati relativi agli incarichi.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:29.128631100+02:00[Europe/Rome]")

public class ElencoIncarichiType {
  @JsonProperty("cig")
  private String cig = null;

  @JsonProperty("prestazioni")
  private List<PrestazioneType> prestazioni = null;

  @JsonProperty("incarichi")
  private List<IncaricoType> incarichi = null;

  public ElencoIncarichiType cig(String cig) {
    this.cig = cig;
    return this;
  }

   /**
   * codice identificativo lotto
   * @return cig
  **/
  @Schema(required = true, description = "codice identificativo lotto")
  public String getCig() {
    return cig;
  }

  public void setCig(String cig) {
    this.cig = cig;
  }

  public ElencoIncarichiType prestazioni(List<PrestazioneType> prestazioni) {
    this.prestazioni = prestazioni;
    return this;
  }

  public ElencoIncarichiType addPrestazioniItem(PrestazioneType prestazioniItem) {
    if (this.prestazioni == null) {
      this.prestazioni = new ArrayList<>();
    }
    this.prestazioni.add(prestazioniItem);
    return this;
  }

   /**
   * Get prestazioni
   * @return prestazioni
  **/
  @Schema(description = "")
  public List<PrestazioneType> getPrestazioni() {
    return prestazioni;
  }

  public void setPrestazioni(List<PrestazioneType> prestazioni) {
    this.prestazioni = prestazioni;
  }

  public ElencoIncarichiType incarichi(List<IncaricoType> incarichi) {
    this.incarichi = incarichi;
    return this;
  }

  public ElencoIncarichiType addIncarichiItem(IncaricoType incarichiItem) {
    if (this.incarichi == null) {
      this.incarichi = new ArrayList<>();
    }
    this.incarichi.add(incarichiItem);
    return this;
  }

   /**
   * Get incarichi
   * @return incarichi
  **/
  @Schema(description = "")
  public List<IncaricoType> getIncarichi() {
    return incarichi;
  }

  public void setIncarichi(List<IncaricoType> incarichi) {
    this.incarichi = incarichi;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElencoIncarichiType elencoIncarichiType = (ElencoIncarichiType) o;
    return Objects.equals(this.cig, elencoIncarichiType.cig) &&
        Objects.equals(this.prestazioni, elencoIncarichiType.prestazioni) &&
        Objects.equals(this.incarichi, elencoIncarichiType.incarichi);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cig, prestazioni, incarichi);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElencoIncarichiType {\n");
    
    sb.append("    cig: ").append(toIndentedString(cig)).append("\n");
    sb.append("    prestazioni: ").append(toIndentedString(prestazioni)).append("\n");
    sb.append("    incarichi: ").append(toIndentedString(incarichi)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
