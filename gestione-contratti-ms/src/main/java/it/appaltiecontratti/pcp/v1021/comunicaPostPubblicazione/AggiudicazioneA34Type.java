/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.AggiudicazioneCompletaType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.DatiBaseAccessibilitaType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.DatiBaseAggiudicazioneAppaltoType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.DatiBaseEsitoRisultatoProceduraType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.DatiBaseSottomissioniRicevuteType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.OfferteType;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.QuadroEconomicoP7Type;
import java.math.BigDecimal;
import java.util.List;
/**
 * Oggetto che riporta i dati inerenti la fase di aggiudicazione
 */
@Schema(description = "Oggetto che riporta i dati inerenti la fase di aggiudicazione")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:29.128631100+02:00[Europe/Rome]")

public class AggiudicazioneA34Type extends AggiudicazioneCompletaType {
  @JsonProperty("numeroOfferteAmmesse")
  private BigDecimal numeroOfferteAmmesse = null;

  @JsonProperty("quadroEconomicoStandard")
  private QuadroEconomicoP7Type quadroEconomicoStandard = null;

  @JsonProperty("datiBaseRisultatoProcedura")
  private DatiBaseEsitoRisultatoProceduraType datiBaseRisultatoProcedura = null;

  @JsonProperty("datiBaseSottomissioniRicevute")
  private DatiBaseSottomissioniRicevuteType datiBaseSottomissioniRicevute = null;

  @JsonProperty("datiBaseAggiudicazioneAppalto")
  private DatiBaseAggiudicazioneAppaltoType datiBaseAggiudicazioneAppalto = null;

  @JsonProperty("datiBaseAccessibilita")
  private DatiBaseAccessibilitaType datiBaseAccessibilita = null;

  public AggiudicazioneA34Type numeroOfferteAmmesse(BigDecimal numeroOfferteAmmesse) {
    this.numeroOfferteAmmesse = numeroOfferteAmmesse;
    return this;
  }

   /**
   * numero di offerte ammesse
   * @return numeroOfferteAmmesse
  **/
  @Schema(required = true, description = "numero di offerte ammesse")
  public BigDecimal getNumeroOfferteAmmesse() {
    return numeroOfferteAmmesse;
  }

  public void setNumeroOfferteAmmesse(BigDecimal numeroOfferteAmmesse) {
    this.numeroOfferteAmmesse = numeroOfferteAmmesse;
  }

  public AggiudicazioneA34Type quadroEconomicoStandard(QuadroEconomicoP7Type quadroEconomicoStandard) {
    this.quadroEconomicoStandard = quadroEconomicoStandard;
    return this;
  }

   /**
   * Get quadroEconomicoStandard
   * @return quadroEconomicoStandard
  **/
  @Schema(description = "")
  public QuadroEconomicoP7Type getQuadroEconomicoStandard() {
    return quadroEconomicoStandard;
  }

  public void setQuadroEconomicoStandard(QuadroEconomicoP7Type quadroEconomicoStandard) {
    this.quadroEconomicoStandard = quadroEconomicoStandard;
  }

  public AggiudicazioneA34Type datiBaseRisultatoProcedura(DatiBaseEsitoRisultatoProceduraType datiBaseRisultatoProcedura) {
    this.datiBaseRisultatoProcedura = datiBaseRisultatoProcedura;
    return this;
  }

   /**
   * Get datiBaseRisultatoProcedura
   * @return datiBaseRisultatoProcedura
  **/
  @Schema(required = true, description = "")
  public DatiBaseEsitoRisultatoProceduraType getDatiBaseRisultatoProcedura() {
    return datiBaseRisultatoProcedura;
  }

  public void setDatiBaseRisultatoProcedura(DatiBaseEsitoRisultatoProceduraType datiBaseRisultatoProcedura) {
    this.datiBaseRisultatoProcedura = datiBaseRisultatoProcedura;
  }

  public AggiudicazioneA34Type datiBaseSottomissioniRicevute(DatiBaseSottomissioniRicevuteType datiBaseSottomissioniRicevute) {
    this.datiBaseSottomissioniRicevute = datiBaseSottomissioniRicevute;
    return this;
  }

   /**
   * Get datiBaseSottomissioniRicevute
   * @return datiBaseSottomissioniRicevute
  **/
  @Schema(description = "")
  public DatiBaseSottomissioniRicevuteType getDatiBaseSottomissioniRicevute() {
    return datiBaseSottomissioniRicevute;
  }

  public void setDatiBaseSottomissioniRicevute(DatiBaseSottomissioniRicevuteType datiBaseSottomissioniRicevute) {
    this.datiBaseSottomissioniRicevute = datiBaseSottomissioniRicevute;
  }

  public AggiudicazioneA34Type datiBaseAggiudicazioneAppalto(DatiBaseAggiudicazioneAppaltoType datiBaseAggiudicazioneAppalto) {
    this.datiBaseAggiudicazioneAppalto = datiBaseAggiudicazioneAppalto;
    return this;
  }

   /**
   * Get datiBaseAggiudicazioneAppalto
   * @return datiBaseAggiudicazioneAppalto
  **/
  @Schema(required = true, description = "")
  public DatiBaseAggiudicazioneAppaltoType getDatiBaseAggiudicazioneAppalto() {
    return datiBaseAggiudicazioneAppalto;
  }

  public void setDatiBaseAggiudicazioneAppalto(DatiBaseAggiudicazioneAppaltoType datiBaseAggiudicazioneAppalto) {
    this.datiBaseAggiudicazioneAppalto = datiBaseAggiudicazioneAppalto;
  }

  public AggiudicazioneA34Type datiBaseAccessibilita(DatiBaseAccessibilitaType datiBaseAccessibilita) {
    this.datiBaseAccessibilita = datiBaseAccessibilita;
    return this;
  }

   /**
   * Get datiBaseAccessibilita
   * @return datiBaseAccessibilita
  **/
  @Schema(description = "")
  public DatiBaseAccessibilitaType getDatiBaseAccessibilita() {
    return datiBaseAccessibilita;
  }

  public void setDatiBaseAccessibilita(DatiBaseAccessibilitaType datiBaseAccessibilita) {
    this.datiBaseAccessibilita = datiBaseAccessibilita;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggiudicazioneA34Type aggiudicazioneA34Type = (AggiudicazioneA34Type) o;
    return Objects.equals(this.numeroOfferteAmmesse, aggiudicazioneA34Type.numeroOfferteAmmesse) &&
        Objects.equals(this.quadroEconomicoStandard, aggiudicazioneA34Type.quadroEconomicoStandard) &&
        Objects.equals(this.datiBaseRisultatoProcedura, aggiudicazioneA34Type.datiBaseRisultatoProcedura) &&
        Objects.equals(this.datiBaseSottomissioniRicevute, aggiudicazioneA34Type.datiBaseSottomissioniRicevute) &&
        Objects.equals(this.datiBaseAggiudicazioneAppalto, aggiudicazioneA34Type.datiBaseAggiudicazioneAppalto) &&
        Objects.equals(this.datiBaseAccessibilita, aggiudicazioneA34Type.datiBaseAccessibilita) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numeroOfferteAmmesse, quadroEconomicoStandard, datiBaseRisultatoProcedura, datiBaseSottomissioniRicevute, datiBaseAggiudicazioneAppalto, datiBaseAccessibilita, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggiudicazioneA34Type {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    numeroOfferteAmmesse: ").append(toIndentedString(numeroOfferteAmmesse)).append("\n");
    sb.append("    quadroEconomicoStandard: ").append(toIndentedString(quadroEconomicoStandard)).append("\n");
    sb.append("    datiBaseRisultatoProcedura: ").append(toIndentedString(datiBaseRisultatoProcedura)).append("\n");
    sb.append("    datiBaseSottomissioniRicevute: ").append(toIndentedString(datiBaseSottomissioniRicevute)).append("\n");
    sb.append("    datiBaseAggiudicazioneAppalto: ").append(toIndentedString(datiBaseAggiudicazioneAppalto)).append("\n");
    sb.append("    datiBaseAccessibilita: ").append(toIndentedString(datiBaseAccessibilita)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
