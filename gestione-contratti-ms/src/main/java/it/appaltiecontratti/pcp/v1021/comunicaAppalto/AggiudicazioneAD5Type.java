/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaAppalto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.AggiudicatarioAD5Type;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.CodIstatEnum;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.DatiBaseCPVType;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.DatiBaseContrattoType;
import it.appaltiecontratti.pcp.v1021.comunicaAppalto.DatiBaseLottoADType;
import java.util.ArrayList;
import java.util.List;
/**
 * AggiudicazioneAD5Type
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:50.369647700+02:00[Europe/Rome]")

public class AggiudicazioneAD5Type {
  @JsonProperty("lotIdentifier")
  private String lotIdentifier = null;

  @JsonProperty("cup")
  private List<String> cup = null;

  @JsonProperty("partecipanti")
  private List<AggiudicatarioAD5Type> partecipanti = new ArrayList<>();

  @JsonProperty("codIstat")
  private CodIstatEnum codIstat = null;

  @JsonProperty("datiBase")
  private DatiBaseLottoADType datiBase = null;

  @JsonProperty("datiBaseCPV")
  private DatiBaseCPVType datiBaseCPV = null;

  @JsonProperty("datiBaseContratto")
  private DatiBaseContrattoType datiBaseContratto = null;

  @JsonProperty("datiBaseDocumenti")
  private AllOfAggiudicazioneAD5TypeDatiBaseDocumenti datiBaseDocumenti = null;

  public AggiudicazioneAD5Type lotIdentifier(String lotIdentifier) {
    this.lotIdentifier = lotIdentifier;
    return this;
  }

   /**
   * Id univoco del lotto generato dalla stazione appaltante - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-137 - Purpose Lot Identifier del TED
   * @return lotIdentifier
  **/
  @Schema(required = true, description = "Id univoco del lotto generato dalla stazione appaltante - nei casi in cui la scheda preveda un eform, corrisponde al campo bt-137 - Purpose Lot Identifier del TED")
  public String getLotIdentifier() {
    return lotIdentifier;
  }

  public void setLotIdentifier(String lotIdentifier) {
    this.lotIdentifier = lotIdentifier;
  }

  public AggiudicazioneAD5Type cup(List<String> cup) {
    this.cup = cup;
    return this;
  }

  public AggiudicazioneAD5Type addCupItem(String cupItem) {
    if (this.cup == null) {
      this.cup = new ArrayList<>();
    }
    this.cup.add(cupItem);
    return this;
  }

   /**
   * Cup
   * @return cup
  **/
  @Schema(description = "Cup")
  public List<String> getCup() {
    return cup;
  }

  public void setCup(List<String> cup) {
    this.cup = cup;
  }

  public AggiudicazioneAD5Type partecipanti(List<AggiudicatarioAD5Type> partecipanti) {
    this.partecipanti = partecipanti;
    return this;
  }

  public AggiudicazioneAD5Type addPartecipantiItem(AggiudicatarioAD5Type partecipantiItem) {
    this.partecipanti.add(partecipantiItem);
    return this;
  }

   /**
   * Get partecipanti
   * @return partecipanti
  **/
  @Schema(required = true, description = "")
  public List<AggiudicatarioAD5Type> getPartecipanti() {
    return partecipanti;
  }

  public void setPartecipanti(List<AggiudicatarioAD5Type> partecipanti) {
    this.partecipanti = partecipanti;
  }

  public AggiudicazioneAD5Type codIstat(CodIstatEnum codIstat) {
    this.codIstat = codIstat;
    return this;
  }

   /**
   * Get codIstat
   * @return codIstat
  **/
  @Schema(required = true, description = "")
  public CodIstatEnum getCodIstat() {
    return codIstat;
  }

  public void setCodIstat(CodIstatEnum codIstat) {
    this.codIstat = codIstat;
  }

  public AggiudicazioneAD5Type datiBase(DatiBaseLottoADType datiBase) {
    this.datiBase = datiBase;
    return this;
  }

   /**
   * Get datiBase
   * @return datiBase
  **/
  @Schema(required = true, description = "")
  public DatiBaseLottoADType getDatiBase() {
    return datiBase;
  }

  public void setDatiBase(DatiBaseLottoADType datiBase) {
    this.datiBase = datiBase;
  }

  public AggiudicazioneAD5Type datiBaseCPV(DatiBaseCPVType datiBaseCPV) {
    this.datiBaseCPV = datiBaseCPV;
    return this;
  }

   /**
   * Get datiBaseCPV
   * @return datiBaseCPV
  **/
  @Schema(required = true, description = "")
  public DatiBaseCPVType getDatiBaseCPV() {
    return datiBaseCPV;
  }

  public void setDatiBaseCPV(DatiBaseCPVType datiBaseCPV) {
    this.datiBaseCPV = datiBaseCPV;
  }

  public AggiudicazioneAD5Type datiBaseContratto(DatiBaseContrattoType datiBaseContratto) {
    this.datiBaseContratto = datiBaseContratto;
    return this;
  }

   /**
   * Get datiBaseContratto
   * @return datiBaseContratto
  **/
  @Schema(description = "")
  public DatiBaseContrattoType getDatiBaseContratto() {
    return datiBaseContratto;
  }

  public void setDatiBaseContratto(DatiBaseContrattoType datiBaseContratto) {
    this.datiBaseContratto = datiBaseContratto;
  }

  public AggiudicazioneAD5Type datiBaseDocumenti(AllOfAggiudicazioneAD5TypeDatiBaseDocumenti datiBaseDocumenti) {
    this.datiBaseDocumenti = datiBaseDocumenti;
    return this;
  }

   /**
   * Get datiBaseDocumenti
   * @return datiBaseDocumenti
  **/
  @Schema(description = "")
  public AllOfAggiudicazioneAD5TypeDatiBaseDocumenti getDatiBaseDocumenti() {
    return datiBaseDocumenti;
  }

  public void setDatiBaseDocumenti(AllOfAggiudicazioneAD5TypeDatiBaseDocumenti datiBaseDocumenti) {
    this.datiBaseDocumenti = datiBaseDocumenti;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggiudicazioneAD5Type aggiudicazioneAD5Type = (AggiudicazioneAD5Type) o;
    return Objects.equals(this.lotIdentifier, aggiudicazioneAD5Type.lotIdentifier) &&
        Objects.equals(this.cup, aggiudicazioneAD5Type.cup) &&
        Objects.equals(this.partecipanti, aggiudicazioneAD5Type.partecipanti) &&
        Objects.equals(this.codIstat, aggiudicazioneAD5Type.codIstat) &&
        Objects.equals(this.datiBase, aggiudicazioneAD5Type.datiBase) &&
        Objects.equals(this.datiBaseCPV, aggiudicazioneAD5Type.datiBaseCPV) &&
        Objects.equals(this.datiBaseContratto, aggiudicazioneAD5Type.datiBaseContratto) &&
        Objects.equals(this.datiBaseDocumenti, aggiudicazioneAD5Type.datiBaseDocumenti);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lotIdentifier, cup, partecipanti, codIstat, datiBase, datiBaseCPV, datiBaseContratto, datiBaseDocumenti);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggiudicazioneAD5Type {\n");
    
    sb.append("    lotIdentifier: ").append(toIndentedString(lotIdentifier)).append("\n");
    sb.append("    cup: ").append(toIndentedString(cup)).append("\n");
    sb.append("    partecipanti: ").append(toIndentedString(partecipanti)).append("\n");
    sb.append("    codIstat: ").append(toIndentedString(codIstat)).append("\n");
    sb.append("    datiBase: ").append(toIndentedString(datiBase)).append("\n");
    sb.append("    datiBaseCPV: ").append(toIndentedString(datiBaseCPV)).append("\n");
    sb.append("    datiBaseContratto: ").append(toIndentedString(datiBaseContratto)).append("\n");
    sb.append("    datiBaseDocumenti: ").append(toIndentedString(datiBaseDocumenti)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
