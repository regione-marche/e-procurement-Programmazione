/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.2
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.AvanzamentoEnum;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.ModalitaPagamentoEnum;
import it.appaltiecontratti.pcp.v1021.comunicaPostPubblicazione.MultilinguaType;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
/**
 * Oggetto che riporta tutti i dati di avanzamento del contratto
 */
@Schema(description = "Oggetto che riporta tutti i dati di avanzamento del contratto")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:29.128631100+02:00[Europe/Rome]")

public class AvanzamentoType {
  @JsonProperty("denominazioneAvanzamento")
  private String denominazioneAvanzamento = null;

  @JsonProperty("denominazioneAvanzamentoMl")
  private MultilinguaType denominazioneAvanzamentoMl = null;

  @JsonProperty("modalitaPagamento")
  private ModalitaPagamentoEnum modalitaPagamento = null;

  @JsonProperty("impAnticipazione")
  private Double impAnticipazione = null;

  @JsonProperty("dataCertificatoAnticipazione")
  private OffsetDateTime dataCertificatoAnticipazione = null;

  @JsonProperty("dataAvanzamento")
  private OffsetDateTime dataAvanzamento = null;

  @JsonProperty("impSal")
  private Double impSal = null;

  @JsonProperty("dataCertificatoMandatoPagamento")
  private OffsetDateTime dataCertificatoMandatoPagamento = null;

  @JsonProperty("impCertificatoMandatoPagamento")
  private Double impCertificatoMandatoPagamento = null;

  @JsonProperty("avanzamento")
  private AvanzamentoEnum avanzamento = null;

  @JsonProperty("numGiorniScostamento")
  private BigDecimal numGiorniScostamento = null;

  @JsonProperty("numGiorniProroga")
  private BigDecimal numGiorniProroga = null;

  public AvanzamentoType denominazioneAvanzamento(String denominazioneAvanzamento) {
    this.denominazioneAvanzamento = denominazioneAvanzamento;
    return this;
  }

   /**
   * Denominazione dello stato di avanzamento
   * @return denominazioneAvanzamento
  **/
  @Schema(required = true, description = "Denominazione dello stato di avanzamento")
  public String getDenominazioneAvanzamento() {
    return denominazioneAvanzamento;
  }

  public void setDenominazioneAvanzamento(String denominazioneAvanzamento) {
    this.denominazioneAvanzamento = denominazioneAvanzamento;
  }

  public AvanzamentoType denominazioneAvanzamentoMl(MultilinguaType denominazioneAvanzamentoMl) {
    this.denominazioneAvanzamentoMl = denominazioneAvanzamentoMl;
    return this;
  }

   /**
   * Get denominazioneAvanzamentoMl
   * @return denominazioneAvanzamentoMl
  **/
  @Schema(description = "")
  public MultilinguaType getDenominazioneAvanzamentoMl() {
    return denominazioneAvanzamentoMl;
  }

  public void setDenominazioneAvanzamentoMl(MultilinguaType denominazioneAvanzamentoMl) {
    this.denominazioneAvanzamentoMl = denominazioneAvanzamentoMl;
  }

  public AvanzamentoType modalitaPagamento(ModalitaPagamentoEnum modalitaPagamento) {
    this.modalitaPagamento = modalitaPagamento;
    return this;
  }

   /**
   * Get modalitaPagamento
   * @return modalitaPagamento
  **/
  @Schema(required = true, description = "")
  public ModalitaPagamentoEnum getModalitaPagamento() {
    return modalitaPagamento;
  }

  public void setModalitaPagamento(ModalitaPagamentoEnum modalitaPagamento) {
    this.modalitaPagamento = modalitaPagamento;
  }

  public AvanzamentoType impAnticipazione(Double impAnticipazione) {
    this.impAnticipazione = impAnticipazione;
    return this;
  }

   /**
   * Eventuale anticipazione
   * @return impAnticipazione
  **/
  @Schema(description = "Eventuale anticipazione")
  public Double getImpAnticipazione() {
    return impAnticipazione;
  }

  public void setImpAnticipazione(Double impAnticipazione) {
    this.impAnticipazione = impAnticipazione;
  }

  public AvanzamentoType dataCertificatoAnticipazione(OffsetDateTime dataCertificatoAnticipazione) {
    this.dataCertificatoAnticipazione = dataCertificatoAnticipazione;
    return this;
  }

   /**
   * Data del certificato di pagamento relativo all&#x27;anticipazione
   * @return dataCertificatoAnticipazione
  **/
  @Schema(description = "Data del certificato di pagamento relativo all'anticipazione")
  public OffsetDateTime getDataCertificatoAnticipazione() {
    return dataCertificatoAnticipazione;
  }

  public void setDataCertificatoAnticipazione(OffsetDateTime dataCertificatoAnticipazione) {
    this.dataCertificatoAnticipazione = dataCertificatoAnticipazione;
  }

  public AvanzamentoType dataAvanzamento(OffsetDateTime dataAvanzamento) {
    this.dataAvanzamento = dataAvanzamento;
    return this;
  }

   /**
   * Data Stato di avanzamento
   * @return dataAvanzamento
  **/
  @Schema(required = true, description = "Data Stato di avanzamento")
  public OffsetDateTime getDataAvanzamento() {
    return dataAvanzamento;
  }

  public void setDataAvanzamento(OffsetDateTime dataAvanzamento) {
    this.dataAvanzamento = dataAvanzamento;
  }

  public AvanzamentoType impSal(Double impSal) {
    this.impSal = impSal;
    return this;
  }

   /**
   * Importo stato avanzamento progressivo (cumulato)
   * @return impSal
  **/
  @Schema(required = true, description = "Importo stato avanzamento progressivo (cumulato)")
  public Double getImpSal() {
    return impSal;
  }

  public void setImpSal(Double impSal) {
    this.impSal = impSal;
  }

  public AvanzamentoType dataCertificatoMandatoPagamento(OffsetDateTime dataCertificatoMandatoPagamento) {
    this.dataCertificatoMandatoPagamento = dataCertificatoMandatoPagamento;
    return this;
  }

   /**
   * Data di emissione del certificato/mandato di pagamento. Per lavori, indicare la data del certificato. Per servizi e forniture, indicare la data del mandato
   * @return dataCertificatoMandatoPagamento
  **/
  @Schema(description = "Data di emissione del certificato/mandato di pagamento. Per lavori, indicare la data del certificato. Per servizi e forniture, indicare la data del mandato")
  public OffsetDateTime getDataCertificatoMandatoPagamento() {
    return dataCertificatoMandatoPagamento;
  }

  public void setDataCertificatoMandatoPagamento(OffsetDateTime dataCertificatoMandatoPagamento) {
    this.dataCertificatoMandatoPagamento = dataCertificatoMandatoPagamento;
  }

  public AvanzamentoType impCertificatoMandatoPagamento(Double impCertificatoMandatoPagamento) {
    this.impCertificatoMandatoPagamento = impCertificatoMandatoPagamento;
    return this;
  }

   /**
   * Importo del certificato/mandato di pagamento. Per lavori, indicare l’importo del certificato. Per servizi e forniture, indicare l’importo del mandato
   * @return impCertificatoMandatoPagamento
  **/
  @Schema(description = "Importo del certificato/mandato di pagamento. Per lavori, indicare l’importo del certificato. Per servizi e forniture, indicare l’importo del mandato")
  public Double getImpCertificatoMandatoPagamento() {
    return impCertificatoMandatoPagamento;
  }

  public void setImpCertificatoMandatoPagamento(Double impCertificatoMandatoPagamento) {
    this.impCertificatoMandatoPagamento = impCertificatoMandatoPagamento;
  }

  public AvanzamentoType avanzamento(AvanzamentoEnum avanzamento) {
    this.avanzamento = avanzamento;
    return this;
  }

   /**
   * Get avanzamento
   * @return avanzamento
  **/
  @Schema(required = true, description = "")
  public AvanzamentoEnum getAvanzamento() {
    return avanzamento;
  }

  public void setAvanzamento(AvanzamentoEnum avanzamento) {
    this.avanzamento = avanzamento;
  }

  public AvanzamentoType numGiorniScostamento(BigDecimal numGiorniScostamento) {
    this.numGiorniScostamento = numGiorniScostamento;
    return this;
  }

   /**
   * Indicare lo scostamento registrato in numero di giorni
   * @return numGiorniScostamento
  **/
  @Schema(description = "Indicare lo scostamento registrato in numero di giorni")
  public BigDecimal getNumGiorniScostamento() {
    return numGiorniScostamento;
  }

  public void setNumGiorniScostamento(BigDecimal numGiorniScostamento) {
    this.numGiorniScostamento = numGiorniScostamento;
  }

  public AvanzamentoType numGiorniProroga(BigDecimal numGiorniProroga) {
    this.numGiorniProroga = numGiorniProroga;
    return this;
  }

   /**
   * Indicare il numero di giorni di proroga concessi (non conseguenti a modifiche contrattuali)
   * @return numGiorniProroga
  **/
  @Schema(description = "Indicare il numero di giorni di proroga concessi (non conseguenti a modifiche contrattuali)")
  public BigDecimal getNumGiorniProroga() {
    return numGiorniProroga;
  }

  public void setNumGiorniProroga(BigDecimal numGiorniProroga) {
    this.numGiorniProroga = numGiorniProroga;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvanzamentoType avanzamentoType = (AvanzamentoType) o;
    return Objects.equals(this.denominazioneAvanzamento, avanzamentoType.denominazioneAvanzamento) &&
        Objects.equals(this.denominazioneAvanzamentoMl, avanzamentoType.denominazioneAvanzamentoMl) &&
        Objects.equals(this.modalitaPagamento, avanzamentoType.modalitaPagamento) &&
        Objects.equals(this.impAnticipazione, avanzamentoType.impAnticipazione) &&
        Objects.equals(this.dataCertificatoAnticipazione, avanzamentoType.dataCertificatoAnticipazione) &&
        Objects.equals(this.dataAvanzamento, avanzamentoType.dataAvanzamento) &&
        Objects.equals(this.impSal, avanzamentoType.impSal) &&
        Objects.equals(this.dataCertificatoMandatoPagamento, avanzamentoType.dataCertificatoMandatoPagamento) &&
        Objects.equals(this.impCertificatoMandatoPagamento, avanzamentoType.impCertificatoMandatoPagamento) &&
        Objects.equals(this.avanzamento, avanzamentoType.avanzamento) &&
        Objects.equals(this.numGiorniScostamento, avanzamentoType.numGiorniScostamento) &&
        Objects.equals(this.numGiorniProroga, avanzamentoType.numGiorniProroga);
  }

  @Override
  public int hashCode() {
    return Objects.hash(denominazioneAvanzamento, denominazioneAvanzamentoMl, modalitaPagamento, impAnticipazione, dataCertificatoAnticipazione, dataAvanzamento, impSal, dataCertificatoMandatoPagamento, impCertificatoMandatoPagamento, avanzamento, numGiorniScostamento, numGiorniProroga);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvanzamentoType {\n");
    
    sb.append("    denominazioneAvanzamento: ").append(toIndentedString(denominazioneAvanzamento)).append("\n");
    sb.append("    denominazioneAvanzamentoMl: ").append(toIndentedString(denominazioneAvanzamentoMl)).append("\n");
    sb.append("    modalitaPagamento: ").append(toIndentedString(modalitaPagamento)).append("\n");
    sb.append("    impAnticipazione: ").append(toIndentedString(impAnticipazione)).append("\n");
    sb.append("    dataCertificatoAnticipazione: ").append(toIndentedString(dataCertificatoAnticipazione)).append("\n");
    sb.append("    dataAvanzamento: ").append(toIndentedString(dataAvanzamento)).append("\n");
    sb.append("    impSal: ").append(toIndentedString(impSal)).append("\n");
    sb.append("    dataCertificatoMandatoPagamento: ").append(toIndentedString(dataCertificatoMandatoPagamento)).append("\n");
    sb.append("    impCertificatoMandatoPagamento: ").append(toIndentedString(impCertificatoMandatoPagamento)).append("\n");
    sb.append("    avanzamento: ").append(toIndentedString(avanzamento)).append("\n");
    sb.append("    numGiorniScostamento: ").append(toIndentedString(numGiorniScostamento)).append("\n");
    sb.append("    numGiorniProroga: ").append(toIndentedString(numGiorniProroga)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
