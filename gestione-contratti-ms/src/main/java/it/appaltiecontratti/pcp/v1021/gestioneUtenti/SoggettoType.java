/*
 * Specifiche Servizi Appalto - OpenAPI 3.0
 * Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```
 *
 * OpenAPI spec version: 1.0.3
 * Contact: ufficio.uscp@anticorruzione.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package it.appaltiecontratti.pcp.v1021.gestioneUtenti;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import it.appaltiecontratti.pcp.v1021.gestioneUtenti.TipoOperazioneSoggettoEnum;
import it.appaltiecontratti.pcp.v1021.gestioneUtenti.TipoRuoloEnum;
import it.appaltiecontratti.pcp.v1021.gestioneUtenti.TipoServizioSoggettoEnum;
import java.time.OffsetDateTime;
/**
 * Oggetto generico del soggetto
 */
@Schema(description = "Oggetto generico del soggetto")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-25T10:09:57.347736900+02:00[Europe/Rome]")

public class SoggettoType {
  @JsonProperty("codiceFiscale")
  private String codiceFiscale = null;

  @JsonProperty("ruolo")
  private TipoRuoloEnum ruolo = null;

  @JsonProperty("servizio")
  private TipoServizioSoggettoEnum servizio = null;

  @JsonProperty("operazione")
  private TipoOperazioneSoggettoEnum operazione = null;

  @JsonProperty("dataInizio")
  private OffsetDateTime dataInizio = null;

  @JsonProperty("dataFine")
  private OffsetDateTime dataFine = null;

  public SoggettoType codiceFiscale(String codiceFiscale) {
    this.codiceFiscale = codiceFiscale;
    return this;
  }

   /**
   * Codice fiscale del soggetto
   * @return codiceFiscale
  **/
  @Schema(example = "MRORSS77T05E472I", description = "Codice fiscale del soggetto")
  public String getCodiceFiscale() {
    return codiceFiscale;
  }

  public void setCodiceFiscale(String codiceFiscale) {
    this.codiceFiscale = codiceFiscale;
  }

  public SoggettoType ruolo(TipoRuoloEnum ruolo) {
    this.ruolo = ruolo;
    return this;
  }

   /**
   * Get ruolo
   * @return ruolo
  **/
  @Schema(description = "")
  public TipoRuoloEnum getRuolo() {
    return ruolo;
  }

  public void setRuolo(TipoRuoloEnum ruolo) {
    this.ruolo = ruolo;
  }

  public SoggettoType servizio(TipoServizioSoggettoEnum servizio) {
    this.servizio = servizio;
    return this;
  }

   /**
   * Get servizio
   * @return servizio
  **/
  @Schema(description = "")
  public TipoServizioSoggettoEnum getServizio() {
    return servizio;
  }

  public void setServizio(TipoServizioSoggettoEnum servizio) {
    this.servizio = servizio;
  }

  public SoggettoType operazione(TipoOperazioneSoggettoEnum operazione) {
    this.operazione = operazione;
    return this;
  }

   /**
   * Get operazione
   * @return operazione
  **/
  @Schema(description = "")
  public TipoOperazioneSoggettoEnum getOperazione() {
    return operazione;
  }

  public void setOperazione(TipoOperazioneSoggettoEnum operazione) {
    this.operazione = operazione;
  }

  public SoggettoType dataInizio(OffsetDateTime dataInizio) {
    this.dataInizio = dataInizio;
    return this;
  }

   /**
   * data inizio incarico soggetto (A date-time specified by ISO 8601 as profiled by RFC 3339)
   * @return dataInizio
  **/
  @Schema(example = "2022-01-23T12:02:05Z", description = "data inizio incarico soggetto (A date-time specified by ISO 8601 as profiled by RFC 3339)")
  public OffsetDateTime getDataInizio() {
    return dataInizio;
  }

  public void setDataInizio(OffsetDateTime dataInizio) {
    this.dataInizio = dataInizio;
  }

  public SoggettoType dataFine(OffsetDateTime dataFine) {
    this.dataFine = dataFine;
    return this;
  }

   /**
   * data fine incarico soggetto (A date-time specified by ISO 8601 as profiled by RFC 3339)
   * @return dataFine
  **/
  @Schema(example = "2022-01-23T12:02:05Z", description = "data fine incarico soggetto (A date-time specified by ISO 8601 as profiled by RFC 3339)")
  public OffsetDateTime getDataFine() {
    return dataFine;
  }

  public void setDataFine(OffsetDateTime dataFine) {
    this.dataFine = dataFine;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SoggettoType soggettoType = (SoggettoType) o;
    return Objects.equals(this.codiceFiscale, soggettoType.codiceFiscale) &&
        Objects.equals(this.ruolo, soggettoType.ruolo) &&
        Objects.equals(this.servizio, soggettoType.servizio) &&
        Objects.equals(this.operazione, soggettoType.operazione) &&
        Objects.equals(this.dataInizio, soggettoType.dataInizio) &&
        Objects.equals(this.dataFine, soggettoType.dataFine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codiceFiscale, ruolo, servizio, operazione, dataInizio, dataFine);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SoggettoType {\n");
    
    sb.append("    codiceFiscale: ").append(toIndentedString(codiceFiscale)).append("\n");
    sb.append("    ruolo: ").append(toIndentedString(ruolo)).append("\n");
    sb.append("    servizio: ").append(toIndentedString(servizio)).append("\n");
    sb.append("    operazione: ").append(toIndentedString(operazione)).append("\n");
    sb.append("    dataInizio: ").append(toIndentedString(dataInizio)).append("\n");
    sb.append("    dataFine: ").append(toIndentedString(dataFine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
