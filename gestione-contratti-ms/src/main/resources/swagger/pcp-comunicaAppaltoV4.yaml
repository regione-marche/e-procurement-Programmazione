openapi: 3.0.3
info:
  title: Specifiche Servizi Appalto - OpenAPI 3.0
  x-summary: >-
    Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti
  description: |-
    Sono descritte le Specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.

      #### Documentazione
      La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:
        [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md)
    ```
  # I termini del servizio.
  termsOfService: 'https://github.com/anticorruzione/npa/blob/main/README.md#termini-del-servizio'
  # Chi posso contattare per informazioni sul servizio e sul suo stato?
  contact:
    email: ufficio.uscp@anticorruzione.it
    name: ANAC - Ufficio Servizi IT Contratti Pubblici
    url: https://www.anticorruzione.it
  # L'audience delle API. Attualmente e' definito solamente
  #   la tipologia `public`.
  x-audience:
    - public
  # Ogni API deve avere un UUID, invariante nel tempo e
  #   rispetto al `title`.
  x-api-id: b3f062a4-2486-11ee-be56-0242ac120002
  license:
    name: Licenza Pubblica dell'Unione Europea v. 1.2
    url: 'https://eupl.eu/1.2/it/'
  # Per dare indicazioni sul ciclo di vita dell'API
  # si puo' usare un parametro come:
  x-lifecycle:
    published: 2023-03-31
    maturity: published  
  version: 1.0.3
servers:
  - url: https://apigw-test.anticorruzione.it/modi/rest/ComunicaAppalto/v2
    description: Ambiente di Qualificazione
tags:
  - name: comunicaAppalto
    description: In questa fase del processo avviene la creazione dell’appalto, la formalizzazione dei fabbisogni della SA e, al termine di tutte le verifiche necessarie, l’emissione del CIG per i singoli lotti dell'appalto. I servizi di seguito descritti potranno essere pertanto richiamati dalle SA fino all’assegnazione dei CIG.
paths:
  /crea-appalto:
    post:
      tags:
         - comunicaAppalto
      summary: API Rest per la creazione di un Appalto. SINCRONO 
      description: Il servizio permette di inviare la scheda per l'inserimento della prima istanza in lavorazione di un Appalto nel formato ESPD-Request, per tutte le tipologie anche affidamento diretto per le pubblicazioni nazionali, nel formato eForm per le pubblicazioni europee in TED, più un formato definito da ANAC con le informazioni aggiuntive. SINCRONO 
      operationId: idAppaltoCrea
      requestBody:
        description: Inserimento Appalto con tutti i dati aggiuntivi
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreaAppaltoRequest'
        required: true
      responses:
        '200':
          description: Operazione terminato con successo. Viene restituito l'idAppalto generato da ANAC
          headers: &ratelimit_headers 
            X-RateLimit-Limit:
               $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
               $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
               $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreaAppaltoResponse'
        '400':
            $ref: '#/components/responses/400BadRequest'
        '404':
            $ref: '#/components/responses/404NotFound'
        '429':
            $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      security:
        - apiKeyAuth: []
  /modifica-appalto:
    post:
      tags:
         - comunicaAppalto
      summary: API Rest per la modifica dell'Appalto. SINCRONO 
      description: Il servizio permette di inviare la scheda per sostituire la precedente istanza dell’Appalto in lavorazione. L'Appalto è nel formato ESPD-Request, per tutte le tipologie anche affidamento diretto per le pubblicazioni nazionali, nel formato eForm per le pubblicazioni europee in TED, più un formato definito da ANAC con le informazioni aggiuntive. SINCRONO 
      operationId: idAppaltoModifica
      requestBody:
        description: Modifica dell'Appalto con tutti i dati aggiuntivi
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatiAppaltoRequest'
        required: true
      responses:
        '200':
          description: Operazione terminato con successo.
          headers: *ratelimit_headers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModificaAppaltoResponse'
        '400':
            $ref: '#/components/responses/400BadRequest'
        '404':
            $ref: '#/components/responses/404NotFound'
        '429':
            $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'  
      security:
        - apiKeyAuth: []
  /cancella-appalto:
    post:
      tags:
        - comunicaAppalto
      summary: API Rest per l'eliminazione di un Appalto in lavorazione. SINCRONO
      description: Eliminazione logica di un Appalto e dei lotti in lavorazione. SINCRONO
      operationId: idAppaltoCancella
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancellaAppaltoRequest'
        required: true
      responses:
        '200':
          description: Operazione terminato con successo.
          headers: *ratelimit_headers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancellaAppaltoResponse'
        '400':
            $ref: '#/components/responses/400BadRequest'
        '404':
            $ref: '#/components/responses/404NotFound'
        '429':
            $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      security:
        - apiKeyAuth: []
  /ricerca-appalto:
    get:
      tags:
        -  comunicaAppalto
      summary: API Rest per la ricerca delle Gare-Lotto dell'Appalto. SINCRONO
      description: Viene recuperata la lista con i dati di sintesi dell'Appalto e dei rispettivi lotti. Le informazioni restituite dal servizio saranno filtrate, oltre in base ai parametri di ricerca, anche in base agli appalti di competenza dell' RP e della SA per la quale sta operando. Almeno un filtro di ricerca deve essere valorizzato. SINCRONO
      operationId: idAppaltoRicerca
      parameters:
        - in: query
          name: codiceAppalto
          description: Identificativo univoco dell'appalto definito dalla Stazione Appaltante
          schema:
            type: string
            maxLength: 64
        - in: query
          name: cig
          description: Identificativo univoco Appalto-Lotto rilasciato da ANAC
          schema:
            type: string
            example: 9050626CD6
        - in: query    
          name: lotIdentifier
          description: Id univoco del lotto generato dalla stazione appaltante - corrisponde al campo bt-137 - Purpose Lot Identifier del TED - Se valorizzato, il parametro richiedere obbligatoriamente la valorizzazione del codiceAppalto o cig.
          schema:
            type: string
        - in: query
          name: stato
          description: Codice Stato dell'Appalto - Se valorizzato, il parametro richiedere obbligatoriamente la valorizzazione di almeno un altro parametro - fare riferimento ai valori contenuti nel file [statoAppalto.json](https://raw.githubusercontent.com/anticorruzione/npa/main/docs/modello-dati/tipologiche/statoAppalto.json)
          schema:
            type: string
            example: 'IN_LAV'
        - in: query
          name: dataCreazioneDa
          description: Data di crezione dell'Appalto - intervallo successivo (A date-time specified by ISO 8601 as profiled by RFC 3339)
          schema:
            type: string
            format: date-time
          example: '2015-05-28T14:07:17Z'
        - in: query
          name: dataCreazioneA
          description: Data di crezione dell'Appalto - intervallo precedente (A date-time specified by ISO 8601 as profiled by RFC 3339)
          schema:
            type: string
            format: date-time
          example: '2015-05-28T14:07:17Z'  
        - in: query
          name: page
          description: numero della pagina da visualizzare
          schema:
            type: integer
            format: int32
            default: 1
        - in: query  
          name: perPage
          description: numero di elementi per pagina
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Operazione terminato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppaltoListaResponse'          
        '400':
            $ref: '#/components/responses/400BadRequest'
        '404':
            $ref: '#/components/responses/404NotFound'
        '429':
            $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      security:
        - apiKeyAuth: []
  /consulta-appalto:
    get:
      tags:
         - comunicaAppalto
      summary: API Rest per il recupero del dettaglio dell'Appalto. SINCRONO
      description: Servizio per la consultazione delle informazioni di dettaglio di un Appalto e dei relativi Lotti. SINCRONO
      operationId: idAppaltoDettaglio
      parameters:
        - in: query
          name: idAppalto
          description: Identificativo univoco dell'Appalto definito da ANAC alternativo al CIG. (A UUID specified by FC4122).
          schema:
            type: string
            format: uuid
            example: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
        - in: query
          name: cig
          description: Identificativo univoco Gara-Lotto rilasciato da ANAC, alternativo all'idAppalto
          schema:
            type: string
            example: 9050626CD6
      responses:
        '200':
          description: Operazione terminato con successo.
          headers: *ratelimit_headers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultaAppaltoResponse'
        '400':
            $ref: '#/components/responses/400BadRequest'
        '404':
            $ref: '#/components/responses/404NotFound'
        '429':
            $ref: '#/components/responses/429TooManyRequests'
        '500':
            $ref: '#/components/responses/500InternalServerError'       
      security:
        - apiKeyAuth: []
  /verifica-appalto:
    post:
      tags:
        - comunicaAppalto
      summary: API Rest per la validazione dell'Appalto. ASINCRONO - ASIMMETRICO
      description: L'ultima istanza di appalto inviata viene validata. In base alla tipologia dell'appalto viene eseguita una validazione sintattica dei dati di input dell'appalto (eForm, ESPDRequest, anacForm). ASINCRONO - ASIMMETRICO 
      operationId: idAppaltoVerifica
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificaAppaltoRequest'
        required: true
      responses:
        '200':
            $ref: '#/components/responses/200AckResponse'
        '400':
            $ref: '#/components/responses/400BadRequest'
        '404':
            $ref: '#/components/responses/404NotFound'
        '429':
            $ref: '#/components/responses/429TooManyRequests'
        '500':
            $ref: '#/components/responses/500InternalServerError'          
      security:
        - apiKeyAuth: []
  /conferma-appalto:
    post:
      tags:
        - comunicaAppalto
      summary: API Rest per la conferma dei dati di Appalto propedeutica alla generazione dei CIG. ASINCRONO - ASIMMETRICO
      description: Il servizio permette la conferma dei dati dell'Appalto inviati, avvia la fase di validazione e assegnazione dei CIG ed inizializza il Fascicolo Virtuale dell'Appalto. Con la successiva chiamata al servizio esito-operazione è possibile recuperare l'idAvviso per invocare il successivo servizio pubblica-avviso. ASINCRONO - ASIMMETRICO 
      operationId: idAppaltoConferma
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfermaAppaltoRequest'
        required: true
      responses:
        '200':
            $ref: '#/components/responses/200AckResponse'
        '400':
            $ref: '#/components/responses/400BadRequest'
        '404':
            $ref: '#/components/responses/404NotFound'
        '429':
            $ref: '#/components/responses/429TooManyRequests'
        '500':
            $ref: '#/components/responses/500InternalServerError'   
      security:
        - apiKeyAuth: []
  /recupera-cig:
    get:
      tags:
        - comunicaAppalto
      summary: API Rest per il recupero dei CIG generati da ANAC e assegnati ai lotti dell’Appalto. SINCRONO
      description: Per un Appalto il servizio restituiti le coppie Lotto - CIG. SINCRONO
      operationId: idCIGRecupera
      parameters:
        - in: query
          name: idAppalto
          description: Identificativo univoco dell'Appalto definito da ANAC
          required: true
          schema:
            type: string
            format: uuid
            example: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
        - in: query
          name: page
          description: numero della pagina da visualizzare
          schema:
            type: integer
            format: int32
            default: 1
        - in: query  
          name: perPage
          description: numero di elementi per pagina
          schema:
            type: integer
            format: int32 
            default: 20
      responses:
        '200':
          description: Operazione terminato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CigListaResponse'
        '400':
            $ref: '#/components/responses/400BadRequest'
        '404':
            $ref: '#/components/responses/404NotFound'
        '429':
            $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      security:
        - apiKeyAuth: []
components:
  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        format: int32
        maximum: 186400
        minimum: 0
        type: integer
    Sunset:
      description: The Sunset HTTP response header field, indicates that a URI is likely
        to become unresponsive at a specified point in the future.  It also defines
        a sunset link relation type that allows linking to resources providing information
        about an upcoming resource or service sunset.
      schema:
        example: Sun, 06 Nov 1994 08:49:37 GMT
        externalDocs:
          url: https://tools.ietf.org/html/rfc7231#appendix-D
        format: HTTP-date
        maxLength: 30
        type: string
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        format: int32
        maximum: 1000000
        minimum: 0
        type: integer
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        format: int32
        maximum: 1000000
        minimum: 0
        type: integer
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        format: int32
        maximum: 186400
        minimum: 0
        type: integer  
    X-Ratelimit-Used: 
      description: The number of requests used in the current period
      schema:
        type: integer
        format: int32      
  responses:
    200AckResponse:
      description: Richiesta accettata
      headers: *ratelimit_headers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AckResponse'
    400BadRequest:
      description: Richiesta malformattata
      headers: *ratelimit_headers
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    404NotFound:
      description: Dato non trovato
      headers: *ratelimit_headers
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    429TooManyRequests:
      description: Limite di richieste raggiunto
      headers:
        Retry-After:
            $ref: '#/components/headers/Retry-After'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    500InternalServerError:
      description: Errore generico. Operazione terminato con errore. Viene restitutito il dettaglio dell'errore
      headers: *ratelimit_headers
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    503ServiceUnavailable:
      description: Service Unavailable
      headers:
        Retry-After:
            $ref: '#/components/headers/Retry-After'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    default:
      description: |-
       Errore inatteso. Non ritornare informazioni
       sulla logica interna e/o non pertinenti all'interfaccia.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErroriEnum:
      $ref: 'https://raw.githubusercontent.com/anticorruzione/npa/main/docs/modello-dati/modello-dati-tipologiche.yaml#/components/schemas/ErroriEnum'      
    AppaltoType:
      $ref: 'https://raw.githubusercontent.com/anticorruzione/npa/main/docs/modello-dati/modello-dati-npa.yaml#/components/schemas/AppaltoType'
    PaginazioneType:
      $ref: 'https://raw.githubusercontent.com/anticorruzione/npa/main/docs/modello-dati/modello-dati-npa.yaml#/components/schemas/PaginazioneType'
    CigType:
      $ref: 'https://raw.githubusercontent.com/anticorruzione/npa/main/docs/modello-dati/modello-dati-npa.yaml#/components/schemas/CigType'
    SchedaComunicaAppaltoType:
      $ref: 'https://raw.githubusercontent.com/anticorruzione/npa/main/docs/modello-dati/modello-dati-npa.yaml#/components/schemas/SchedaComunicaAppaltoType'
    DatiAppaltoType:
      $ref: 'https://raw.githubusercontent.com/anticorruzione/npa/main/docs/modello-dati/modello-dati-npa.yaml#/components/schemas/DatiAppaltoType'      
    CreaAppaltoRequest:
      description: Oggetto in ingresso al servizio    
      type: object
      additionalProperties: false
      properties:
        scheda:
          $ref: '#/components/schemas/SchedaComunicaAppaltoType'
    DatiAppaltoRequest:
      description: Oggetto in ingresso al servizio    
      type: object
      additionalProperties: false
      required:  # List the required properties here
        - idAppalto
      properties:
        idAppalto:
          description: identificativo univoco dell'Appalto generato da ANAC.
          type: string
          format: uuid
          example: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
        scheda:
          $ref: '#/components/schemas/SchedaComunicaAppaltoType'
    CancellaAppaltoRequest:
      description: Oggetto in ingresso al servizio    
      type: object
      additionalProperties: false
      properties:
        idAppalto:
          description: identificativo univoco dell'Appalto definito da ANAC. (A UUID specified by RFC4122)
          type: string
          format: uuid
          example: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
        motivo:  
          description: descrizione del motivo della richiesta di cancellazione
          type: string
          maxLength: 200
          example: 'Revoca delle procedure di gara'
      required:
        - idAppalto
    VerificaAppaltoRequest:
      description: Oggetto in ingresso al servizio    
      type: object
      additionalProperties: false
      properties:
        idAppalto:
          description: identificativo univoco dell'Appalto definito da ANAC. (A UUID specified by RFC4122)
          type: string
          format: uuid
          example: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      required:
        - idAppalto
    ConfermaAppaltoRequest:
      description: Oggetto in ingresso al servizio    
      type: object
      additionalProperties: false
      properties:
        idAppalto:
          description: identificativo univoco dell'Appalto definito da ANAC. (A UUID specified by RFC4122)
          type: string
          format: uuid
          example: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      required:
        - idAppalto
    CreaAppaltoResponse:
      allOf: # estende lo schema dati di BaseResponse
        - $ref: '#/components/schemas/BaseResponse'
      description: Risposta generica servizio
      type: object
      properties:
        idAppalto:
          description: Identificativo univoco dell'Appalto definito da ANAC. (A UUID specified by RFC4122)
          format: uuid
          example: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
      example:
        detail: "Creazione eseguita con successo"
        status: 200
        title: "Operazione Effettuata"
    ModificaAppaltoResponse:
      allOf: # estende lo schema dati di BaseResponse
        - $ref: '#/components/schemas/BaseResponse'
      description: Risposta generica servizio
      type: object
      properties:
        idAppalto:
          description: Identificativo univoco dell'Appalto definito da ANAC. (A UUID specified by RFC4122)
          format: uuid
          example: "f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
    ConsultaAppaltoResponse:
      allOf: # estende lo schema dati di BaseResponse
        - $ref: '#/components/schemas/BaseResponse'
      properties:  
        appalto:
          $ref: '#/components/schemas/DatiAppaltoType'          
    CancellaAppaltoResponse:
      allOf: # estende lo schema dati di BaseResponse
        - $ref: '#/components/schemas/BaseResponse'
      example:
        detail: "Cancellazione eseguita con successo"
        status: 200
        title: "Operazione Effettuata"
    AppaltoListaResponse:
      allOf: # estende la classe BaseResponse e PaginazioneType
        - $ref: '#/components/schemas/BaseResponse'
        - $ref: '#/components/schemas/PaginazioneType'
      description: Oggetto generico di ritorno di una risposta con paginazione
      type: object
      additionalProperties: false
      properties:
        result: 
          description: risposta di una lista di oggetti paginati specifica del servizio SINCRONO
          type: array
          items:
            $ref: '#/components/schemas/AppaltoType'
    CigListaResponse:
      allOf: # estende la classe BaseResponse e PaginazioneType
        - $ref: '#/components/schemas/BaseResponse'
        - $ref: '#/components/schemas/PaginazioneType'
      description: Oggetto generico di ritorno di una risposta con paginazione
      type: object
      additionalProperties: false
      properties:
        result: 
          description: Lista lotIdentifier-cig
          type: array
          items:
            $ref: '#/components/schemas/CigType'
    BaseResponse:
      type: object
      additionalProperties: false
      properties:
          instance:
              description: |
                An absolute URI that identifies the specific occurrence of the
                problem.
                It may or may not yield further information if dereferenced.
              format: uri
              maxLength: 2048
              type: string
          status:
              description: |
                The HTTP status code generated by the origin server for this
                occurrence
                of the problem.
              exclusiveMaximum: true
              format: int32
              maximum: 600
              minimum: 100
              type: integer
              example: 400
          title:
              description: |
                A short, summary of the problem type. Written in english and
                readable
                for engineers (usually not suited for non technical stakeholders
                and not localized);
              maxLength: 64
              pattern: ^[ -~]{0,64}$
              type: string
              example: 'There was a validation error'
          detail:
              description: |
                A human readable explanation specific to this occurrence of the
                problem.
              maxLength: 4096
              pattern: ^.{0,1024}$
              type: string
              example: 'Object Validation Error'
          type:
              description: |
                An absolute URI that identifies the problem type. When
                dereferenced,
                it SHOULD provide human-readable documentation for the problem
                type
                (e.g., using HTML).
              default: about:blank
              format: uri
              maxLength: 2048
              type: string
              example: 'https://tools.ietf.org/html/rfc7231#section-6.6.4'
    ErrorResponse:
      allOf: # estende la classe BaseResponse
        - $ref: '#/components/schemas/BaseResponse'
      properties:
        errori: 
          description: elenco degli errori
          type: array
          items:
            $ref: '#/components/schemas/ErroriEnum'
    AckResponse:
      allOf: # estende la classe BaseResponse
        - $ref: '#/components/schemas/BaseResponse'
      example:
        status: 200
        title: "Richiesta acquisita"
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      name: apiKeyAuth # name of the header, query parameter or cookie
      in: header  # can be "header", "query" or "cookie"